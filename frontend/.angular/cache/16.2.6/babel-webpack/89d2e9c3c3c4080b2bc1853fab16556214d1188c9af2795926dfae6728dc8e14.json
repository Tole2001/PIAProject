{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../servisi/loginservis.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"ng2-charts\";\nimport * as i6 from \"@angular/material/icon\";\nfunction AdminComponent_div_11_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 11);\n    i0.ɵɵelement(2, \"canvas\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementStart(4, \"div\", 11);\n    i0.ɵɵelement(5, \"canvas\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"options\", ctx_r2.chartOptions)(\"data\", ctx_r2.barChartData2)(\"type\", ctx_r2.barChartType2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"options\", ctx_r2.chartOptions)(\"data\", ctx_r2.barChartDataAge)(\"type\", ctx_r2.barChartType2);\n  }\n}\nfunction AdminComponent_div_11_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 11);\n    i0.ɵɵelement(2, \"canvas\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 11);\n    i0.ɵɵelement(4, \"canvas\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"options\", ctx_r3.chartOptions)(\"data\", ctx_r3.pieChartData)(\"type\", ctx_r3.pieType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"options\", ctx_r3.chartOptions)(\"data\", ctx_r3.pieChartData2)(\"type\", ctx_r3.pieType);\n  }\n}\nfunction AdminComponent_div_11_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 11);\n    i0.ɵɵelement(2, \"canvas\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"options\", ctx_r4.histogramOptions)(\"data\", ctx_r4.histogramChart)(\"type\", ctx_r4.barChartType2);\n  }\n}\nfunction AdminComponent_div_11_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 11);\n    i0.ɵɵelement(2, \"canvas\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"options\", ctx_r5.lineChartOptions)(\"data\", ctx_r5.lineChartData)(\"type\", ctx_r5.lineChartType);\n  }\n}\nfunction AdminComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"div\", 9)(3, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AdminComponent_div_11_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.showChartBar(1));\n    });\n    i0.ɵɵtext(4, \"Bar dijagrami\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AdminComponent_div_11_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.showChartBar(2));\n    });\n    i0.ɵɵtext(6, \"Pie dijagrami\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AdminComponent_div_11_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.showChartBar(3));\n    });\n    i0.ɵɵtext(8, \"Histogram dijagrami\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AdminComponent_div_11_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.showChartBar(4));\n    });\n    i0.ɵɵtext(10, \"Linija dijagrami\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(11, AdminComponent_div_11_div_11_Template, 6, 6, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, AdminComponent_div_11_div_12_Template, 5, 6, \"div\", 5);\n    i0.ɵɵtemplate(13, AdminComponent_div_11_div_13_Template, 3, 3, \"div\", 5);\n    i0.ɵɵtemplate(14, AdminComponent_div_11_div_14_Template, 3, 3, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chart === 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chart === 2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chart === 3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chart === 4);\n  }\n}\nfunction AdminComponent_div_12_ng_container_6_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 27);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const predmet_r16 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(predmet_r16);\n  }\n}\nfunction AdminComponent_div_12_ng_container_6_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 27);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const razred_r17 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(razred_r17);\n  }\n}\nfunction AdminComponent_div_12_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 18)(2, \"div\", 19)(3, \"div\", 20);\n    i0.ɵɵelement(4, \"img\", 21);\n    i0.ɵɵelementStart(5, \"h4\", 22);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 23);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 23);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\", 23);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\", 23);\n    i0.ɵɵtext(14, \"Predmeti: \");\n    i0.ɵɵtemplate(15, AdminComponent_div_12_ng_container_6_ng_container_15_Template, 3, 1, \"ng-container\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"p\", 23);\n    i0.ɵɵtext(17, \"Razredi: \");\n    i0.ɵɵtemplate(18, AdminComponent_div_12_ng_container_6_ng_container_18_Template, 3, 1, \"ng-container\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"p\", 23)(20, \"a\", 24);\n    i0.ɵɵlistener(\"click\", function AdminComponent_div_12_ng_container_6_Template_a_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const nastavnik_r13 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.openPdf(nastavnik_r13.CV));\n    });\n    i0.ɵɵelementStart(21, \"mat-icon\");\n    i0.ɵɵtext(22, \"description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \" CV \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"p\", 23)(25, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function AdminComponent_div_12_ng_container_6_Template_button_click_25_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const nastavnik_r13 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.prihvatiNastavnika(nastavnik_r13.username));\n    });\n    i0.ɵɵtext(26, \"Prihvati\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"p\", 23)(28, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AdminComponent_div_12_ng_container_6_Template_button_click_28_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const nastavnik_r13 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.odbijNastavnika(nastavnik_r13.username));\n    });\n    i0.ɵɵtext(29, \"Odbij\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const nastavnik_r13 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", ctx_r11.backend + nastavnik_r13.profilePic, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", nastavnik_r13.name, \" \", nastavnik_r13.surname, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Adresa:\", nastavnik_r13.adress, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Email:\", nastavnik_r13.email, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Telefon:\", nastavnik_r13.telephone, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", nastavnik_r13.predmeti);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", nastavnik_r13.razredi);\n  }\n}\nfunction AdminComponent_div_12_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\")(5, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function AdminComponent_div_12_ng_container_19_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const prdmt_r22 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.addPredmet(prdmt_r22.predmet));\n    });\n    i0.ɵɵtext(6, \"Prihvati Predmet\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AdminComponent_div_12_ng_container_19_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const prdmt_r22 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r25.rejectPredmet(prdmt_r22.predmet));\n    });\n    i0.ɵɵtext(9, \"Odbij Predmet\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const prdmt_r22 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(prdmt_r22.predmet);\n  }\n}\nfunction AdminComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 7)(2, \"div\", 8)(3, \"h3\");\n    i0.ɵɵtext(4, \"Pregled prijava nastavnika:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 7);\n    i0.ɵɵtemplate(6, AdminComponent_div_12_ng_container_6_Template, 30, 8, \"ng-container\", 13);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 7)(8, \"div\", 14)(9, \"h3\");\n    i0.ɵɵtext(10, \"Pregled predmeta:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"table\", 15)(12, \"thead\")(13, \"tr\")(14, \"th\");\n    i0.ɵɵtext(15, \"Predmet\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"th\")(17, \"th\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"tbody\");\n    i0.ɵɵtemplate(19, AdminComponent_div_12_ng_container_19_Template, 10, 1, \"ng-container\", 13);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(20, \"h3\");\n    i0.ɵɵtext(21, \"Dodaj Predmet:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function AdminComponent_div_12_Template_input_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.predmettoadd = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function AdminComponent_div_12_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.addPr(ctx_r28.predmettoadd));\n    });\n    i0.ɵɵtext(24, \"DodajPredmet\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.nastavnici);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.predmeti);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.predmettoadd);\n  }\n}\nclass barChartSubject {\n  constructor() {\n    this.subject = \"\";\n    this.count = 0;\n  }\n}\nclass barChartAge {\n  constructor() {\n    this.age = \"\";\n    this.count = 0;\n  }\n}\nclass PieChartHelper {\n  constructor() {\n    this.pol = \"\";\n    this.count = 0;\n  }\n}\nexport class AdminComponent {\n  constructor(servis, router) {\n    this.servis = servis;\n    this.router = router;\n    this.backend = \"http://localhost:4000\";\n    this.where = 2;\n    this.chart = 1;\n    this.ucenici = [];\n    this.nastavnici = [];\n    this.predmeti = [];\n    this.predmetiGOOD = [];\n    this.casovi = [];\n    this.predmettoadd = \"\";\n    this.ageGRP = [\"srednja\", \"osnovna5-8\", \"osnovna1-4\"];\n    this.pol = ['M', 'Z'];\n    this.nastavniciGOOD = [];\n    //BarDiagramSubjects\n    this.barChartType2 = 'bar';\n    this.barChartData2 = {\n      labels: [],\n      datasets: []\n    };\n    this.chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false\n    };\n    this.subjectList = [];\n    //BarDiagramSubjects\n    this.barChartDataAge = {\n      labels: [],\n      datasets: []\n    };\n    this.ageList = [];\n    //PieChartNastavnici\n    this.pieType = 'pie';\n    this.pieChartData = {\n      labels: [],\n      datasets: []\n    };\n    this.nastavniciPol = [];\n    //PieChartUcenici\n    this.pieChartData2 = {\n      labels: [],\n      datasets: []\n    };\n    this.uceniciPol = [];\n    //HISTOGRAMCHART\n    this.histogramChart = {\n      labels: [],\n      datasets: []\n    };\n    this.histogramOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          beginAtZero: true,\n          title: {\n            display: true,\n            text: 'Percentage'\n          }\n        }\n      },\n      plugins: {\n        tooltip: {\n          callbacks: {\n            label: context => {\n              return context.dataset.label + ': ' + context.formattedValue + '%';\n            }\n          }\n        }\n      }\n    };\n    //LINE CHART\n    this.lineChartData = {\n      datasets: [],\n      labels: []\n    };\n    this.lineChartType = 'line';\n    this.lineChartOptions = {\n      elements: {\n        line: {\n          tension: 0.5\n        }\n      },\n      scales: {\n        y: {\n          position: 'left'\n        },\n        y1: {\n          position: 'right',\n          grid: {\n            color: 'rgba(255,0,0,0.3)'\n          },\n          ticks: {\n            color: 'red'\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          display: true\n        }\n      },\n      annotation: {\n        annotations: [{\n          type: 'line',\n          scaleID: 'x',\n          value: 'March',\n          borderColor: 'orange',\n          borderWidth: 2,\n          label: {\n            display: true,\n            position: 'center',\n            color: 'orange',\n            content: 'LineAnno',\n            font: {\n              weight: 'bold'\n            }\n          }\n        }]\n      }\n    };\n  }\n  changeWhere(b) {\n    this.where = b;\n  }\n  ngOnInit() {\n    let logged = localStorage.getItem(\"admin\");\n    if (!logged) {\n      console.log(\"AM HERE\");\n      this.router.navigate(['login']);\n    }\n    this.servis.getAllNastavnik().subscribe(nastavnik => {\n      if (nastavnik) {\n        this.servis.getAllCasoviOdrzani().subscribe(casovi => {\n          if (casovi) {\n            this.createLineChart(nastavnik, casovi);\n          }\n        });\n      }\n    });\n    this.servis.getAllCasoviOdrzani().subscribe(casovi => {\n      if (casovi) {\n        this.casovi = casovi;\n        this.createHistogram();\n      }\n    });\n    this.servis.getAllNastavnik().subscribe(rez => {\n      this.nastavniciGOOD = rez;\n    });\n    this.servis.nastavnikwait().subscribe(rez => {\n      this.nastavnici = rez;\n    });\n    this.servis.getpredmeti(0).subscribe(rez => {\n      this.predmeti = rez;\n    });\n    this.servis.getpredmeti(1).subscribe(rez => {\n      this.predmetiGOOD = rez;\n    });\n    //BarChart\n    this.servis.getpredmeti(1).subscribe(rez => {\n      if (rez) {\n        this.servis.getAllNastavnik().subscribe(data => {\n          if (data) {\n            this.countBySubject(rez, data);\n            this.countByAge(data);\n            this.populateBarChartSubject();\n          }\n        });\n      }\n    });\n    //Pie Chart\n    this.servis.getAllUcenici().subscribe(uc => {\n      if (uc) {\n        this.servis.getAllNastavnik().subscribe(data => {\n          if (data) {\n            this.countPol(uc, data);\n            this.populatePieChart();\n          }\n        });\n      }\n    });\n  }\n  prihvatiNastavnika(name) {\n    this.servis.potvrdinastavnikagain(name, 1).subscribe(rez => {\n      this.servis.getAllUcenici().subscribe(uc => {\n        if (uc) {\n          this.servis.getAllNastavnik().subscribe(data => {\n            if (data) {\n              this.countPol(uc, data);\n              this.populatePieChart();\n            }\n          });\n        }\n      });\n    });\n    this.nastavnici = this.nastavnici.filter(nastavnik => nastavnik.username !== name);\n    //this.servis.nastavnikwait().subscribe(rez =>{\n    //  this.nastavnici = rez\n    //})\n  }\n\n  odbijNastavnika(name) {\n    this.servis.potvrdinastavnikagain(name, 2).subscribe(rez => {});\n    this.nastavnici = this.nastavnici.filter(nastavnik => nastavnik.username !== name);\n    //this.servis.nastavnikwait().subscribe(rez =>{\n    //  this.nastavnici = rez\n    //})\n  }\n\n  addPredmet(name) {\n    this.servis.potvrdipredmet(name, 1).subscribe(rez => {});\n    this.predmeti = this.predmeti.filter(predmet => predmet.predmet !== name);\n    //this.servis.getpredmeti(0).subscribe(rez=>{\n    //  this.predmeti = rez\n    //})\n  }\n\n  rejectPredmet(name) {\n    this.servis.potvrdipredmet(name, 2).subscribe(rez => {});\n    this.predmeti = this.predmeti.filter(predmet => predmet.predmet !== name);\n    //this.servis.getpredmeti(0).subscribe(rez=>{\n    //  this.predmeti = rez\n    //})\n  }\n\n  addPr(name) {\n    this.servis.addpredmeti(name, 1).subscribe(rez => {\n      if (rez.message === \"Dodat predmet\") {\n        alert(\"Predmet dodat\");\n      }\n    });\n    //this.ngOnInit()\n  }\n\n  LogOut() {\n    localStorage.clear();\n    this.router.navigate(['']);\n  }\n  //BAR DIAGRAM FUNC\n  countBySubject(pred, nast) {\n    pred.forEach(subject => {\n      let count = nast.filter(teacher => teacher.predmeti.includes(subject.predmet)).length;\n      const hlp = new barChartSubject();\n      hlp.count = count;\n      hlp.subject = subject.predmet;\n      this.subjectList.push(hlp);\n    });\n  }\n  countByAge(nast) {\n    this.ageGRP.forEach(age => {\n      let count = nast.filter(teacher => teacher.razredi.includes(age)).length;\n      const hlp = new barChartAge();\n      hlp.count = count;\n      hlp.age = age;\n      this.ageList.push(hlp);\n    });\n  }\n  populateBarChartSubject() {\n    //Subject\n    const newDataset = {\n      data: [],\n      label: 'Broj nastavnika po predmetu'\n    };\n    if (!this.barChartData2.labels) {\n      this.barChartData2.labels = [];\n    }\n    this.subjectList.forEach(data => {\n      if (this.barChartData2.labels) {\n        this.barChartData2.labels.push(data.subject);\n      }\n      newDataset.data.push(data.count);\n    });\n    this.barChartData2.datasets.push(newDataset);\n    //Age\n    const newDataset2 = {\n      data: [],\n      label: 'Broj nastavnika po razredima'\n    };\n    if (!this.barChartDataAge.labels) {\n      this.barChartDataAge.labels = [];\n    }\n    this.ageList.forEach(ag => {\n      if (this.barChartDataAge.labels) {\n        this.barChartDataAge.labels.push(ag.age);\n      }\n      newDataset2.data.push(ag.count);\n    });\n    this.barChartDataAge.datasets.push(newDataset2);\n    //this.barChartLabels.push(subjectData.subject);\n    //this.barChartData.push({ data: [subjectData.teacherCount], label: subjectData.subject });\n  }\n\n  showChartBar(num) {\n    this.chart = num;\n  }\n  //PIECHART\n  countPol(u, n) {\n    this.pol.forEach(pl => {\n      let count = u.filter(ucenik => ucenik.sex === pl).length;\n      let count2 = n.filter(nastavnik => nastavnik.sex === pl).length;\n      let hlp = new PieChartHelper();\n      hlp.pol = pl;\n      hlp.count = count;\n      this.uceniciPol.push(hlp);\n      let hlp2 = new PieChartHelper();\n      hlp2.count = count2;\n      hlp2.pol = pl;\n      this.nastavniciPol.push(hlp2);\n    });\n  }\n  populatePieChart() {\n    const newDataset = {\n      data: [],\n      label: 'Nastavnici po polovima'\n    };\n    const newDataset2 = {\n      data: [],\n      label: 'Ucenici po polovima'\n    };\n    if (!this.pieChartData.labels) {\n      this.pieChartData.labels = [];\n    }\n    if (!this.pieChartData2.labels) {\n      this.pieChartData2.labels = [];\n    }\n    this.nastavniciPol.forEach(nastavnik => {\n      if (this.pieChartData.labels) {\n        this.pieChartData.labels.push(nastavnik.pol);\n      }\n      newDataset.data.push(nastavnik.count);\n    });\n    this.uceniciPol.forEach(ucenik => {\n      if (this.pieChartData2.labels) {\n        this.pieChartData2.labels.push(ucenik.pol);\n      }\n      newDataset2.data.push(ucenik.count);\n    });\n    this.pieChartData.datasets.push(newDataset);\n    this.pieChartData2.datasets.push(newDataset2);\n  }\n  //HISTOGRAM\n  createHistogram() {\n    const daysOfWeek = ['NED', 'PON', 'UTO', 'SRE', 'ČET', 'PET', 'SUB'];\n    // Count classes held on each day of the week\n    const classesPerDay = Array.from({\n      length: 7\n    }, () => 0);\n    this.casovi.forEach(cas => {\n      let dayIndex = new Date(cas.datumvreme).getDay();\n      let year = new Date(cas.datumvreme).getFullYear();\n      if (year === 2023) {\n        classesPerDay[dayIndex]++;\n      }\n    });\n    daysOfWeek.forEach(dani => {\n      if (this.histogramChart.labels) {\n        this.histogramChart.labels.push(dani);\n      }\n    });\n    // Calculate total number of classes\n    let totalClasses = this.casovi.filter(cas => new Date(cas.datumvreme).getFullYear() === 2023).length;\n    // Calculate percentages\n    const percentages = classesPerDay.map(count => count / totalClasses * 100);\n    const newDataset = {\n      data: [],\n      label: 'Procenti ukupnih casova po danima'\n    };\n    percentages.forEach(procenti => {\n      newDataset.data.push(procenti);\n    });\n    this.histogramChart.datasets.push(newDataset);\n  }\n  createLineChart(nastavnici, casovi) {\n    //URADI KASNIJE I PROVERU DA MORA 2023 I URADI SORT TOP 10\n    const classesPerTeacherPerMonth = new Map();\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    months.forEach(mesec => {\n      if (this.lineChartData.labels) {\n        this.lineChartData.labels.push(mesec);\n      }\n    });\n    nastavnici.forEach(nastavnik => {\n      classesPerTeacherPerMonth.set(nastavnik.username, Array(12).fill(0));\n    });\n    casovi.forEach(cas => {\n      const date = new Date(cas.datumvreme);\n      if (classesPerTeacherPerMonth.has(cas.nastavnik) && date instanceof Date && date.getFullYear() === 2023) {\n        const monthIndex = date.getMonth();\n        const currentCount = classesPerTeacherPerMonth.get(cas.nastavnik)[monthIndex];\n        classesPerTeacherPerMonth.get(cas.nastavnik)[monthIndex] = currentCount + 1;\n      }\n    });\n    // Calculate total number of classes per teacher\n    const totalClassesPerTeacher = new Map();\n    nastavnici.forEach(nastavnik => {\n      const totalClasses = classesPerTeacherPerMonth.get(nastavnik.username).reduce((acc, val) => acc + val, 0);\n      totalClassesPerTeacher.set(nastavnik.username, totalClasses);\n    });\n    // Sort teachers based on total number of classes\n    const sortedTeachers = [...totalClassesPerTeacher.entries()].sort((a, b) => b[1] - a[1]);\n    // Select top 10 teachers\n    const top10Teachers = sortedTeachers.slice(0, 10);\n    // Generate line chart data for top 10 teachers\n    this.lineChartData.labels = months;\n    this.lineChartData.datasets = top10Teachers.map(([teacher, _]) => {\n      return {\n        data: classesPerTeacherPerMonth.get(teacher),\n        label: teacher,\n        borderColor: this.getRandomColor()\n      };\n    });\n    //nastavnici.forEach(nastavnik=>{\n    //  const newDataset: { data: number[], label: string, borderColor: string } = { data: classesPerTeacherPerMonth.get(nastavnik.username)!,\n    //   label: nastavnik.username, borderColor : this.getRandomColor() };\n    // this.lineChartData.datasets.push(newDataset)\n    //})\n  }\n\n  getRandomColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  openPdf(url) {\n    window.open(this.backend + url, '_blank');\n  }\n  static #_ = this.ɵfac = function AdminComponent_Factory(t) {\n    return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.LoginservisService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminComponent,\n    selectors: [[\"app-admin\"]],\n    decls: 17,\n    vars: 2,\n    consts: [[1, \"navbar\", \"navbar-dark-grey\"], [1, \"container\"], [1, \"navbar-right\"], [3, \"click\"], [\"class\", \"row\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"footer-content\"], [1, \"row\"], [1, \"col-sm-12\"], [1, \"buttons\"], [1, \"btn\", \"btn-outline-dark\", 3, \"click\"], [\"id\", \"chart-container\"], [\"baseChart\", \"\", 1, \"chart\", 3, \"options\", \"data\", \"type\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-md-12\"], [1, \"table\"], [\"type\", \"text\", 1, \"btn-outline-dark\", \"rounded-pill\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"col-md-3\"], [1, \"card\", 2, \"margin-bottom\", \"20px\", \"width\", \"300px\"], [1, \"card-body\"], [1, \"card-img-top\", 2, \"width\", \"100%\", \"height\", \"150px\", 3, \"src\"], [1, \"card-title\"], [1, \"card-text\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"btn-block\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-block\", 3, \"click\"], [1, \"indented\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function AdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n        i0.ɵɵlistener(\"click\", function AdminComponent_Template_span_click_3_listener() {\n          return ctx.changeWhere(1);\n        });\n        i0.ɵɵtext(4, \"Dijagrami \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"span\", 3);\n        i0.ɵɵlistener(\"click\", function AdminComponent_Template_span_click_5_listener() {\n          return ctx.changeWhere(2);\n        });\n        i0.ɵɵtext(6, \"Funkcije \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"span\", 3);\n        i0.ɵɵlistener(\"click\", function AdminComponent_Template_span_click_7_listener() {\n          return ctx.LogOut();\n        });\n        i0.ɵɵtext(8, \"Log out\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(9, \"body\")(10, \"main\");\n        i0.ɵɵtemplate(11, AdminComponent_div_11_Template, 15, 4, \"div\", 4);\n        i0.ɵɵtemplate(12, AdminComponent_div_12_Template, 25, 3, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"footer\")(14, \"div\", 6)(15, \"p\");\n        i0.ɵɵtext(16, \"PIA Projekat\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.where === 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.where === 2);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.BaseChartDirective, i6.MatIcon],\n    styles: [\"header[_ngcontent-%COMP%] {\\n  background-color: #f8f9fa;\\n  padding: 10px;\\n}\\n\\nheader[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n\\nheader[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:hover {\\n  text-decoration: underline;\\n}\\n\\n\\n.navbar-dark-grey[_ngcontent-%COMP%] {\\n  background-color: #333; \\n\\n  padding: 10px; \\n\\n  color: white;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-start; \\n\\n  flex-direction: column; \\n\\n}\\n\\n.navbar-right[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  margin-bottom: 10px; \\n\\n}\\n.checkbox-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n}\\n\\na[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n  color: #333; \\n\\n  margin-right: 10px; \\n\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  border-collapse: separate;\\n  border-spacing: 10px; \\n\\n}\\n\\ntd[_ngcontent-%COMP%] {\\n  padding: 10px; \\n\\n}\\n\\n.indented[_ngcontent-%COMP%] {\\n  padding-left: 20px; \\n\\n}\\n\\n\\n#chart-container[_ngcontent-%COMP%] {\\n  width: 1500px; \\n\\n  height: 400px; \\n\\n}\\n\\n\\n\\nfooter[_ngcontent-%COMP%] {\\n  background-color: #333;\\n  color: #fff;\\n  padding: 20px 0;\\n  text-align: center;\\n}\\n\\n.footer-content[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n  margin: 0 auto;\\n}\\n\\nmain[_ngcontent-%COMP%] {\\n  flex: 1; \\n\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  min-height: 100vh; \\n\\n  margin: 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vYWRtaW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUF5QjtFQUN6QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsMEJBQTBCO0FBQzVCOzs7QUFHQTtFQUNFLHNCQUFzQixFQUFFLCtCQUErQjtFQUN2RCxhQUFhLEVBQUUsNEJBQTRCO0VBQzNDLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYiwyQkFBMkIsRUFBRSwrQkFBK0I7RUFDNUQsc0JBQXNCLEVBQUUsOEJBQThCO0FBQ3hEOztBQUVBO0VBQ0UsZUFBZTtFQUNmLG1CQUFtQixFQUFFLG9DQUFvQztBQUMzRDtBQUNBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsV0FBVyxFQUFFLGVBQWU7RUFDNUIsa0JBQWtCLEVBQUUscUJBQXFCO0FBQzNDOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLG9CQUFvQixFQUFFLHlEQUF5RDtBQUNqRjs7QUFFQTtFQUNFLGFBQWEsRUFBRSwwREFBMEQ7QUFDM0U7O0FBRUE7RUFDRSxrQkFBa0IsRUFBRSw4Q0FBOEM7QUFDcEU7OztBQUdBO0VBQ0UsYUFBYSxFQUFFLCtCQUErQjtFQUM5QyxhQUFhLEVBQUUsZ0NBQWdDO0FBQ2pEOzs7O0FBSUE7RUFDRSxzQkFBc0I7RUFDdEIsV0FBVztFQUNYLGVBQWU7RUFDZixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsY0FBYztBQUNoQjs7QUFFQTtFQUNFLE9BQU8sRUFBRSx5Q0FBeUM7QUFDcEQ7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGlCQUFpQixFQUFFLDJDQUEyQztFQUM5RCxTQUFTO0FBQ1giLCJzb3VyY2VzQ29udGVudCI6WyJoZWFkZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XHJcbiAgcGFkZGluZzogMTBweDtcclxufVxyXG5cclxuaGVhZGVyIHNwYW4ge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuaGVhZGVyIHNwYW46aG92ZXIge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG59XHJcblxyXG5cclxuLm5hdmJhci1kYXJrLWdyZXkge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7IC8qIERhcmsgZ3JleSBiYWNrZ3JvdW5kIGNvbG9yICovXHJcbiAgcGFkZGluZzogMTBweDsgLyogQWRkIHBhZGRpbmcgZm9yIHNwYWNpbmcgKi9cclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyAvKiBBbGlnbiBlbGVtZW50cyB0byB0aGUgbGVmdCAqL1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IC8qIFN0YWNrIGVsZW1lbnRzIHZlcnRpY2FsbHkgKi9cclxufVxyXG5cclxuLm5hdmJhci1yaWdodCBzcGFuIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDsgLyogQWRkIHNvbWUgc3BhY2UgYmV0d2VlbiBlbGVtZW50cyAqL1xyXG59XHJcbi5jaGVja2JveC1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG5hIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6ICMzMzM7IC8qIExpbmsgY29sb3IgKi9cclxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7IC8qIEFkanVzdCBhcyBuZWVkZWQgKi9cclxufVxyXG5cclxudGFibGUge1xyXG4gIGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7XHJcbiAgYm9yZGVyLXNwYWNpbmc6IDEwcHg7IC8qIEFkanVzdCB0aGlzIHZhbHVlIHRvIGNvbnRyb2wgdGhlIGdhcCBiZXR3ZWVuIGNvbHVtbnMgKi9cclxufVxyXG5cclxudGQge1xyXG4gIHBhZGRpbmc6IDEwcHg7IC8qIEFkanVzdCB0aGlzIHZhbHVlIHRvIGNvbnRyb2wgdGhlIGdhcCBpbnNpZGUgZWFjaCBjZWxsICovXHJcbn1cclxuXHJcbi5pbmRlbnRlZCB7XHJcbiAgcGFkZGluZy1sZWZ0OiAyMHB4OyAvKiBBZGp1c3QgdGhlIHZhbHVlIGJhc2VkIG9uIHlvdXIgcHJlZmVyZW5jZSAqL1xyXG59XHJcblxyXG5cclxuI2NoYXJ0LWNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDE1MDBweDsgLyogQWRqdXN0IHRoZSB3aWR0aCBhcyBuZWVkZWQgKi9cclxuICBoZWlnaHQ6IDQwMHB4OyAvKiBBZGp1c3QgdGhlIGhlaWdodCBhcyBuZWVkZWQgKi9cclxufVxyXG5cclxuXHJcblxyXG5mb290ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgcGFkZGluZzogMjBweCAwO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmZvb3Rlci1jb250ZW50IHtcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbm1haW4ge1xyXG4gIGZsZXg6IDE7IC8qIFRoaXMgcHVzaGVzIHRoZSBmb290ZXIgdG8gdGhlIGJvdHRvbSAqL1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgbWluLWhlaWdodDogMTAwdmg7IC8qIEVuc3VyZSBib2R5IGNvdmVycyB0aGUgZW50aXJlIHZpZXdwb3J0ICovXHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r2","chartOptions","barChartData2","barChartType2","barChartDataAge","ctx_r3","pieChartData","pieType","pieChartData2","ctx_r4","histogramOptions","histogramChart","ctx_r5","lineChartOptions","lineChartData","lineChartType","ɵɵlistener","AdminComponent_div_11_Template_button_click_3_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","showChartBar","ɵɵtext","AdminComponent_div_11_Template_button_click_5_listener","ctx_r8","AdminComponent_div_11_Template_button_click_7_listener","ctx_r9","AdminComponent_div_11_Template_button_click_9_listener","ctx_r10","ɵɵtemplate","AdminComponent_div_11_div_11_Template","AdminComponent_div_11_div_12_Template","AdminComponent_div_11_div_13_Template","AdminComponent_div_11_div_14_Template","ctx_r0","chart","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵtextInterpolate","predmet_r16","razred_r17","AdminComponent_div_12_ng_container_6_ng_container_15_Template","AdminComponent_div_12_ng_container_6_ng_container_18_Template","AdminComponent_div_12_ng_container_6_Template_a_click_20_listener","restoredCtx","_r19","nastavnik_r13","$implicit","ctx_r18","openPdf","CV","AdminComponent_div_12_ng_container_6_Template_button_click_25_listener","ctx_r20","prihvatiNastavnika","username","AdminComponent_div_12_ng_container_6_Template_button_click_28_listener","ctx_r21","odbijNastavnika","ctx_r11","backend","profilePic","ɵɵsanitizeUrl","ɵɵtextInterpolate2","name","surname","ɵɵtextInterpolate1","adress","email","telephone","predmeti","razredi","AdminComponent_div_12_ng_container_19_Template_button_click_5_listener","_r24","prdmt_r22","ctx_r23","addPredmet","predmet","AdminComponent_div_12_ng_container_19_Template_button_click_8_listener","ctx_r25","rejectPredmet","AdminComponent_div_12_ng_container_6_Template","AdminComponent_div_12_ng_container_19_Template","AdminComponent_div_12_Template_input_ngModelChange_22_listener","$event","_r27","ctx_r26","predmettoadd","AdminComponent_div_12_Template_button_click_23_listener","ctx_r28","addPr","ctx_r1","nastavnici","barChartSubject","constructor","subject","count","barChartAge","age","PieChartHelper","pol","AdminComponent","servis","router","where","ucenici","predmetiGOOD","casovi","ageGRP","nastavniciGOOD","labels","datasets","responsive","maintainAspectRatio","subjectList","ageList","nastavniciPol","uceniciPol","scales","y","beginAtZero","title","display","text","plugins","tooltip","callbacks","label","context","dataset","formattedValue","elements","line","tension","position","y1","grid","color","ticks","legend","annotation","annotations","type","scaleID","value","borderColor","borderWidth","content","font","weight","changeWhere","b","ngOnInit","logged","localStorage","getItem","console","log","navigate","getAllNastavnik","subscribe","nastavnik","getAllCasoviOdrzani","createLineChart","createHistogram","rez","nastavnikwait","getpredmeti","data","countBySubject","countByAge","populateBarChartSubject","getAllUcenici","uc","countPol","populatePieChart","potvrdinastavnikagain","filter","potvrdipredmet","addpredmeti","message","alert","LogOut","clear","pred","nast","forEach","teacher","includes","length","hlp","push","newDataset","newDataset2","ag","num","u","n","pl","ucenik","sex","count2","hlp2","daysOfWeek","classesPerDay","Array","from","cas","dayIndex","Date","datumvreme","getDay","year","getFullYear","dani","totalClasses","percentages","map","procenti","classesPerTeacherPerMonth","Map","months","mesec","set","fill","date","has","monthIndex","getMonth","currentCount","get","totalClassesPerTeacher","reduce","acc","val","sortedTeachers","entries","sort","a","top10Teachers","slice","_","getRandomColor","letters","i","Math","floor","random","url","window","open","ɵɵdirectiveInject","i1","LoginservisService","i2","Router","_2","selectors","decls","vars","consts","template","AdminComponent_Template","rf","ctx","AdminComponent_Template_span_click_3_listener","AdminComponent_Template_span_click_5_listener","AdminComponent_Template_span_click_7_listener","AdminComponent_div_11_Template","AdminComponent_div_12_Template"],"sources":["C:\\Users\\Teodor\\Desktop\\PIAPROJEKAT\\frontend\\src\\app\\admin\\admin.component.ts","C:\\Users\\Teodor\\Desktop\\PIAPROJEKAT\\frontend\\src\\app\\admin\\admin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LoginservisService } from '../servisi/loginservis.service';\nimport { Nastavnik } from '../models/nastavnik';\nimport { Predmet } from '../models/predmet';\nimport { Router } from '@angular/router';\nimport { Cas } from '../models/cas';\n\nimport { ChartConfiguration, ChartData, ChartEvent, ChartType } from 'chart.js';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { ChartDataset,Chart,ChartOptions } from 'chart.js';\nimport { Ucenik } from '../models/ucenik';\n\nclass barChartSubject{\n  subject : string = \"\";\n  count : number = 0;\n}\nclass barChartAge{\n  age : string = \"\";\n  count : number = 0;\n}\nclass PieChartHelper{\n  pol : string = \"\";\n  count : number = 0;\n}\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent {\n  constructor(private servis :LoginservisService, private router : Router ){}\n  backend: string = \"http://localhost:4000\"\n  where : number = 2\n  chart : number = 1\n  ucenici : Ucenik[] = []\n  nastavnici : Nastavnik[] = []\n  predmeti : Predmet[] = []\n  predmetiGOOD : Predmet[] = []\n  casovi : Cas[] = []\n  predmettoadd : string = \"\"\n  ageGRP : string[] = [\"srednja\",\"osnovna5-8\",\"osnovna1-4\"]\n  pol : string[] = ['M','Z']\n  nastavniciGOOD : Nastavnik[] = []\n  //BarDiagramSubjects\n  public barChartType2: ChartType = 'bar';\n  public barChartData2: ChartData<'bar'> = {\n    labels: [],\n    datasets: [\n\n    ],\n  };\n  public chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n  }\n  subjectList : barChartSubject[] = []\n\n  //BarDiagramSubjects\n  public barChartDataAge: ChartData<'bar'> = {\n    labels: [],\n    datasets: [\n\n    ],\n  };\n  ageList : barChartAge[] = []\n  //PieChartNastavnici\n  public pieType: ChartType = 'pie';\n  public pieChartData: ChartData<'pie', number[], string | string[]> = {\n    labels: [],\n    datasets: [\n\n    ],\n  };\n  nastavniciPol : PieChartHelper[] = []\n  //PieChartUcenici\n  public pieChartData2: ChartData<'pie', number[], string | string[]> = {\n    labels: [],\n    datasets: [\n\n    ],\n  };\n  uceniciPol : PieChartHelper[] = []\n  //HISTOGRAMCHART\n  public histogramChart: ChartData<'bar', number[], string | string[]> = {\n    labels: [],\n    datasets: [\n\n    ],\n  };\n  public histogramOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Percentage'\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: (context: any) => {\n            return context.dataset.label + ': ' + context.formattedValue + '%';\n          }\n        }\n      }\n    }\n  };\n  //LINE CHART\n  public lineChartData: ChartConfiguration['data'] = {\n    datasets: [\n\n    ],\n    labels: [],\n  };\n  public lineChartType: ChartType = 'line';\n  public lineChartOptions: any  = {\n    elements: {\n      line: {\n        tension: 0.5,\n      },\n    },\n    scales: {\n      y: {\n        position: 'left',\n      },\n      y1: {\n        position: 'right',\n        grid: {\n          color: 'rgba(255,0,0,0.3)',\n        },\n        ticks: {\n          color: 'red',\n        },\n      },\n    },\n    plugins: {\n      legend: { display: true },\n    },\n    annotation: {\n      annotations: [\n        {\n          type: 'line',\n          scaleID: 'x',\n          value: 'March',\n          borderColor: 'orange',\n          borderWidth: 2,\n          label: {\n            display: true,\n            position: 'center',\n            color: 'orange',\n            content: 'LineAnno',\n            font: {\n              weight: 'bold',\n            },\n          },\n        },\n      ],\n    },\n  };\n\n\n  changeWhere(b : number){\n    this.where = b;\n  }\n\n  ngOnInit(){\n    let logged = localStorage.getItem(\"admin\")\n    if(!logged){\n      console.log(\"AM HERE\")\n      this.router.navigate(['login']);\n    }\n    this.servis.getAllNastavnik().subscribe(nastavnik=>{\n      if(nastavnik){\n        this.servis.getAllCasoviOdrzani().subscribe(casovi=>{\n          if(casovi){\n\n            this.createLineChart(nastavnik,casovi);\n          }\n        })\n      }\n    })\n    this.servis.getAllCasoviOdrzani().subscribe(casovi=>{\n      if(casovi){\n        this.casovi = casovi;\n        this.createHistogram();\n      }\n\n    })\n    this.servis.getAllNastavnik().subscribe(rez=>{\n        this.nastavniciGOOD = rez\n    })\n    this.servis.nastavnikwait().subscribe(rez =>{\n       this.nastavnici = rez\n    })\n    this.servis.getpredmeti(0).subscribe(rez=>{\n      this.predmeti = rez\n    })\n    this.servis.getpredmeti(1).subscribe(rez=>{\n      this.predmetiGOOD = rez\n    })\n    //BarChart\n    this.servis.getpredmeti(1).subscribe(rez=>{\n      if(rez){\n        this.servis.getAllNastavnik().subscribe(data=>{\n          if(data){\n            this.countBySubject(rez,data)\n            this.countByAge(data)\n            this.populateBarChartSubject()\n          }\n\n      })\n      }\n    })\n    //Pie Chart\n    this.servis.getAllUcenici().subscribe(uc=>{\n      if(uc){\n        this.servis.getAllNastavnik().subscribe(data=>{\n          if(data){\n            this.countPol(uc,data)\n            this.populatePieChart()\n\n          }\n\n      })\n      }\n    })\n\n\n  }\n\n  prihvatiNastavnika(name : string){\n    this.servis.potvrdinastavnikagain(name,1).subscribe(rez=>{\n      this.servis.getAllUcenici().subscribe(uc=>{\n        if(uc){\n          this.servis.getAllNastavnik().subscribe(data=>{\n            if(data){\n              this.countPol(uc,data)\n              this.populatePieChart()\n\n            }\n\n        })\n        }\n      })\n    })\n    this.nastavnici = this.nastavnici.filter(nastavnik => nastavnik.username !== name)\n\n    //this.servis.nastavnikwait().subscribe(rez =>{\n    //  this.nastavnici = rez\n    //})\n  }\n\n  odbijNastavnika(name : string){\n    this.servis.potvrdinastavnikagain(name,2).subscribe(rez=>{\n\n    })\n    this.nastavnici = this.nastavnici.filter(nastavnik => nastavnik.username !== name)\n    //this.servis.nastavnikwait().subscribe(rez =>{\n    //  this.nastavnici = rez\n    //})\n  }\n\n  addPredmet(name : string){\n    this.servis.potvrdipredmet(name,1).subscribe(rez=>{\n\n    })\n    this.predmeti = this.predmeti.filter(predmet => predmet.predmet !== name)\n\n    //this.servis.getpredmeti(0).subscribe(rez=>{\n    //  this.predmeti = rez\n    //})\n  }\n\n  rejectPredmet(name : string){\n    this.servis.potvrdipredmet(name,2).subscribe(rez=>{\n\n    })\n    this.predmeti = this.predmeti.filter(predmet => predmet.predmet !== name)\n    //this.servis.getpredmeti(0).subscribe(rez=>{\n    //  this.predmeti = rez\n    //})\n  }\n\n  addPr(name : string){\n    this.servis.addpredmeti(name,1).subscribe(rez=>{\n      if(rez.message === \"Dodat predmet\"){\n        alert(\"Predmet dodat\")\n      }\n    })\n\n    //this.ngOnInit()\n  }\n\n\n  LogOut(){\n    localStorage.clear()\n    this.router.navigate([''])\n  }\n  //BAR DIAGRAM FUNC\n  countBySubject(pred: Predmet[],nast : Nastavnik[]){\n    pred.forEach(subject=>{\n      let count = nast.filter(teacher => teacher.predmeti.includes(subject.predmet)).length\n      const hlp = new barChartSubject()\n      hlp.count = count\n      hlp.subject = subject.predmet\n      this.subjectList.push(hlp)\n    })\n  }\n  countByAge(nast : Nastavnik[]){\n    this.ageGRP.forEach(age=>{\n      let count = nast.filter(teacher => teacher.razredi.includes(age)).length\n      const hlp = new barChartAge()\n      hlp.count = count\n      hlp.age = age\n      this.ageList.push(hlp)\n    })\n  }\n\n  populateBarChartSubject(){\n    //Subject\n    const newDataset: { data: number[], label: string } = { data: [], label: 'Broj nastavnika po predmetu' };\n    if (!this.barChartData2.labels) {\n      this.barChartData2.labels = [];\n    }\n    this.subjectList.forEach(data=>{\n      if(this.barChartData2.labels){\n        this.barChartData2.labels.push(data.subject)\n      }\n      newDataset.data.push(data.count)\n\n    })\n    this.barChartData2.datasets.push(newDataset)\n    //Age\n    const newDataset2: { data: number[], label: string } = { data: [], label: 'Broj nastavnika po razredima' };\n    if (!this.barChartDataAge.labels) {\n      this.barChartDataAge.labels = [];\n    }\n    this.ageList.forEach(ag =>{\n      if(this.barChartDataAge.labels){\n        this.barChartDataAge.labels.push(ag.age)\n      }\n      newDataset2.data.push(ag.count)\n    })\n    this.barChartDataAge.datasets.push(newDataset2)\n\n    //this.barChartLabels.push(subjectData.subject);\n    //this.barChartData.push({ data: [subjectData.teacherCount], label: subjectData.subject });\n  }\n  showChartBar(num : number){\n    this.chart = num\n  }\n  //PIECHART\n  countPol(u : Ucenik[],n: Nastavnik[]){\n\n    this.pol.forEach(pl=>{\n      let count = u.filter(ucenik=> ucenik.sex === pl).length\n      let count2 = n.filter(nastavnik=> nastavnik.sex === pl).length\n      let hlp = new PieChartHelper()\n      hlp.pol = pl\n      hlp.count = count\n      this.uceniciPol.push(hlp)\n      let hlp2 = new PieChartHelper()\n      hlp2.count = count2\n      hlp2.pol = pl\n      this.nastavniciPol.push(hlp2)\n    })\n  }\n\n  populatePieChart(){\n    const newDataset: { data: number[], label: string } = { data: [], label: 'Nastavnici po polovima' };\n    const newDataset2: { data: number[], label: string } = { data: [], label: 'Ucenici po polovima' };\n    if(!this.pieChartData.labels){\n      this.pieChartData.labels = []\n    }\n    if(!this.pieChartData2.labels){\n      this.pieChartData2.labels = []\n    }\n    this.nastavniciPol.forEach(nastavnik=>{\n      if(this.pieChartData.labels){\n        this.pieChartData.labels.push(nastavnik.pol)\n      }\n      newDataset.data.push(nastavnik.count)\n    })\n    this.uceniciPol.forEach(ucenik=>{\n      if(this.pieChartData2.labels){\n        this.pieChartData2.labels.push(ucenik.pol)\n      }\n      newDataset2.data.push(ucenik.count)\n    })\n    this.pieChartData.datasets.push(newDataset)\n    this.pieChartData2.datasets.push(newDataset2)\n  }\n\n  //HISTOGRAM\n  createHistogram() {\n    const daysOfWeek = ['NED', 'PON', 'UTO', 'SRE', 'ČET', 'PET', 'SUB'];\n\n    // Count classes held on each day of the week\n    const classesPerDay = Array.from({ length: 7 }, () => 0);\n    this.casovi.forEach(cas => {\n      let dayIndex = new Date(cas.datumvreme).getDay();\n      let year = new Date(cas.datumvreme).getFullYear()\n      if(year === 2023) {\n        classesPerDay[dayIndex]++;\n      }\n\n    });\n    daysOfWeek.forEach(dani=>{\n      if( this.histogramChart.labels){\n        this.histogramChart.labels.push(dani)\n      }\n\n    })\n\n    // Calculate total number of classes\n    let totalClasses = this.casovi.filter(cas => new Date(cas.datumvreme).getFullYear() === 2023).length\n\n    // Calculate percentages\n    const percentages = classesPerDay.map(count => (count / totalClasses) * 100);\n    const newDataset: { data: number[], label: string } = { data: [], label: 'Procenti ukupnih casova po danima' };\n    percentages.forEach(procenti=>{\n      newDataset.data.push(procenti)\n    })\n    this.histogramChart.datasets.push(newDataset)\n  }\n\n\n  createLineChart(nastavnici : Nastavnik[], casovi : Cas[]): void {\n    //URADI KASNIJE I PROVERU DA MORA 2023 I URADI SORT TOP 10\n    const classesPerTeacherPerMonth = new Map<string, number[]>();\n\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    months.forEach(mesec=>{\n      if(this.lineChartData.labels){\n        this.lineChartData.labels.push(mesec)\n      }\n    })\n    nastavnici.forEach(nastavnik => {\n      classesPerTeacherPerMonth.set(nastavnik.username, Array(12).fill(0));\n    });\n    casovi.forEach(cas => {\n      const date = new Date(cas.datumvreme);\n\n      if (classesPerTeacherPerMonth.has(cas.nastavnik) && date instanceof Date && date.getFullYear() === 2023) {\n        const monthIndex = date.getMonth();\n        const currentCount = classesPerTeacherPerMonth.get(cas.nastavnik)![monthIndex];\n        classesPerTeacherPerMonth.get(cas.nastavnik)![monthIndex] = currentCount + 1;\n      }\n    });\n\n     // Calculate total number of classes per teacher\n    const totalClassesPerTeacher = new Map<string, number>();\n    nastavnici.forEach(nastavnik => {\n      const totalClasses = classesPerTeacherPerMonth.get(nastavnik.username)!.reduce((acc, val) => acc + val, 0);\n      totalClassesPerTeacher.set(nastavnik.username, totalClasses);\n    });\n\n    // Sort teachers based on total number of classes\n    const sortedTeachers = [...totalClassesPerTeacher.entries()].sort((a, b) => b[1] - a[1]);\n\n    // Select top 10 teachers\n    const top10Teachers = sortedTeachers.slice(0, 10);\n\n\n    // Generate line chart data for top 10 teachers\n    this.lineChartData.labels = months;\n    this.lineChartData.datasets = top10Teachers.map(([teacher, _]) => {\n      return {\n        data: classesPerTeacherPerMonth.get(teacher)!,\n        label: teacher,\n        borderColor: this.getRandomColor()\n      };\n    });\n\n\n    //nastavnici.forEach(nastavnik=>{\n    //  const newDataset: { data: number[], label: string, borderColor: string } = { data: classesPerTeacherPerMonth.get(nastavnik.username)!,\n     //   label: nastavnik.username, borderColor : this.getRandomColor() };\n     // this.lineChartData.datasets.push(newDataset)\n    //})\n\n\n\n\n  }\n\n  getRandomColor(): string {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n\n  openPdf(url : string) {\n    window.open(this.backend + url, '_blank');\n\n  }\n}\n\n\n\n\n\n","<header class=\"navbar navbar-dark-grey\">\n  <div class=\"container\">\n    <div class=\"navbar-right\">\n      <span (click)=\"changeWhere(1)\">Dijagrami  </span>\n      <span (click)=\"changeWhere(2)\">Funkcije  </span>\n      <span (click)=\"LogOut()\">Log out</span>\n    </div>\n  </div>\n\n\n</header>\n<body>\n  <main>\n    <div *ngIf=\"where === 1\" class=\"row\">\n      <div class=\"col-sm-12\">\n        <div class = \"buttons\">\n          <button class=\"btn btn-outline-dark\" (click)=\"showChartBar(1)\">Bar dijagrami</button>\n          <button class=\"btn btn-outline-dark\" (click)=\"showChartBar(2)\">Pie dijagrami</button>\n          <button class=\"btn btn-outline-dark\" (click)=\"showChartBar(3)\">Histogram dijagrami</button>\n          <button class=\"btn btn-outline-dark\" (click)=\"showChartBar(4)\">Linija dijagrami</button>\n        </div>\n        <div *ngIf=\"chart === 1\">\n          <div id=\"chart-container\">\n            <canvas\n            baseChart\n            class=\"chart\"\n            [options]=\"chartOptions\"\n            [data]=\"barChartData2\"\n            [type]=\"barChartType2\"\n            >\n            </canvas>\n          </div>\n          <br/>\n          <div id=\"chart-container\">\n            <canvas\n            baseChart\n            class=\"chart\"\n            [options]=\"chartOptions\"\n            [data]=\"barChartDataAge\"\n            [type]=\"barChartType2\"\n            >\n            </canvas>\n          </div>\n        </div>\n      </div>\n\n\n\n      <div *ngIf=\"chart === 2\">\n        <div id=\"chart-container\">\n          <canvas\n          baseChart\n          class=\"chart\"\n          [options]=\"chartOptions\"\n          [data]=\"pieChartData\"\n          [type]=\"pieType\"\n          >\n          </canvas>\n        </div>\n        <div id=\"chart-container\">\n          <canvas\n          baseChart\n          class=\"chart\"\n          [options]=\"chartOptions\"\n          [data]=\"pieChartData2\"\n          [type]=\"pieType\"\n          >\n          </canvas>\n        </div>\n      </div>\n\n      <div *ngIf=\"chart === 3\">\n        <div id=\"chart-container\">\n          <canvas\n          baseChart\n          class=\"chart\"\n          [options]=\"histogramOptions\"\n          [data]=\"histogramChart\"\n          [type]=\"barChartType2\"\n          >\n          </canvas>\n        </div>\n      </div>\n\n      <div *ngIf=\"chart === 4\">\n        <div id=\"chart-container\">\n          <canvas\n          baseChart\n          class=\"chart\"\n          [options]=\"lineChartOptions\"\n          [data]=\"lineChartData\"\n          [type]=\"lineChartType\"\n          >\n          </canvas>\n        </div>\n      </div>\n\n\n\n\n    </div>\n    <div *ngIf=\"where === 2\">\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          <h3>Pregled prijava nastavnika:</h3>\n          <div class=\"row\">\n            <ng-container *ngFor=\"let nastavnik of nastavnici\">\n              <div class=\"col-md-3\">\n                <div class=\"card\" style=\"margin-bottom: 20px;width: 300px;\"  >\n                  <div class=\"card-body\">\n                    <img class=\"card-img-top\" [src]=\"backend + nastavnik.profilePic\" style=\"width: 100%; height: 150px;\" >\n                    <h4 class=\"card-title\">{{ nastavnik.name }} {{ nastavnik.surname }}</h4>\n                    <p class=\"card-text\">Adresa:{{ nastavnik.adress }}</p>\n                    <p class=\"card-text\">Email:{{ nastavnik.email }}</p>\n                    <p class=\"card-text\">Telefon:{{ nastavnik.telephone }}</p>\n                    <p class=\"card-text\">Predmeti:\n                      <ng-container *ngFor=\"let predmet of nastavnik.predmeti\">\n                        <div class=\"indented\">{{ predmet }}</div>\n                      </ng-container>\n                    </p>\n                    <p class=\"card-text\">Razredi:\n                      <ng-container *ngFor=\"let razred of nastavnik.razredi\">\n                        <div class=\"indented\">{{ razred }}</div>\n                      </ng-container>\n                    </p>\n                    <p class=\"card-text\">\n                      <a (click)=\"openPdf(nastavnik.CV)\" style=\"cursor: pointer;\">\n                        <mat-icon>description</mat-icon>\n                        CV\n                      </a>\n                    </p>\n                    <p class=\"card-text\">\n                      <button class=\"btn btn-success btn-block\" type=\"button\" (click)=\"prihvatiNastavnika(nastavnik.username)\">Prihvati</button>\n                    </p>\n                    <p class=\"card-text\">\n                      <button class=\"btn btn-danger btn-block\" type=\"button\" (click)=\"odbijNastavnika(nastavnik.username)\">Odbij</button>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <h3>Pregled predmeta:</h3>\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th>Predmet</th>\n                <th></th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <ng-container *ngFor=\"let prdmt of predmeti\">\n                <tr>\n                  <td>{{ prdmt.predmet }}</td>\n                  <td>\n                    <button class=\"btn btn-success\" type=\"button\" (click)=\"addPredmet(prdmt.predmet)\">Prihvati Predmet</button>\n                  </td>\n                  <td>\n                    <button class=\"btn btn-danger\" type=\"button\" (click)=\"rejectPredmet(prdmt.predmet)\">Odbij Predmet</button>\n                  </td>\n                </tr>\n              </ng-container>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <h3>Dodaj Predmet:</h3>\n      <input  class = \"btn-outline-dark rounded-pill\" type =\"text\" [(ngModel)] = \"predmettoadd\">\n      <button class=\"btn btn-primary\" type=\"button\" (click)=\"addPr(predmettoadd)\" >DodajPredmet</button>\n\n    </div>\n  </main>\n  <footer>\n    <div class=\"footer-content\">\n      <p>PIA Projekat</p>\n    </div>\n  </footer>\n\n</body>\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}