"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const user_controllers_1 = require("../controllers/user.controllers");
const userRouter = express_1.default.Router();
userRouter.route("/register").post((req, res) => new user_controllers_1.UserController().registerU(req, res));
userRouter.route("/registernastavnik").post((req, res) => new user_controllers_1.UserController().registerN(req, res));
userRouter.route("/login").post((req, res) => new user_controllers_1.UserController().login(req, res));
userRouter.route("/getucenik").post((req, res) => new user_controllers_1.UserController().getucenik(req, res));
userRouter.route("/getnastavnik").post((req, res) => new user_controllers_1.UserController().getnastavnik(req, res));
userRouter.route("/updateucenik").post((req, res) => new user_controllers_1.UserController().updateucenik(req, res));
userRouter.route("/updatenastavnik").post((req, res) => new user_controllers_1.UserController().updatenastavnik(req, res));
userRouter.route("/getnastavniciporazred").post((req, res) => new user_controllers_1.UserController().getnastavniciporazred(req, res));
userRouter.route("/nastavnikpretraga").post((req, res) => new user_controllers_1.UserController().pretraganastavnik(req, res));
userRouter.route("/napravicas").post((req, res) => new user_controllers_1.UserController().cascreate(req, res));
userRouter.route("/dohvaticasove").post((req, res) => new user_controllers_1.UserController().casget(req, res));
userRouter.route("/odrzicas").post((req, res) => new user_controllers_1.UserController().odrzocas(req, res));
userRouter.route("/casgetdosije").post((req, res) => new user_controllers_1.UserController().casgetdosije(req, res));
userRouter.route("/potvrdicas").post((req, res) => new user_controllers_1.UserController().potvrdicas(req, res));
userRouter.route("/casgetpotvrda").post((req, res) => new user_controllers_1.UserController().casgetpotvrda(req, res));
userRouter.route("/casgetthree").post((req, res) => new user_controllers_1.UserController().casgetthree(req, res));
userRouter.route("/odrzicas").post((req, res) => new user_controllers_1.UserController().odrzi(req, res));
userRouter.route("/getdosije").post((req, res) => new user_controllers_1.UserController().casgetdosije(req, res));
userRouter.route("/getsvojeucenike").post((req, res) => new user_controllers_1.UserController().getsvojeucenike(req, res));
userRouter.route("/addpredmet").post((req, res) => new user_controllers_1.UserController().addpredmet(req, res));
userRouter.route("/getpredmeti").post((req, res) => new user_controllers_1.UserController().getpredmete(req, res));
userRouter.route("/potvrdipredmet").post((req, res) => new user_controllers_1.UserController().potvrdipredmet(req, res));
userRouter.route("/potvrdinastavnika").post((req, res) => new user_controllers_1.UserController().potvrdipredmet(req, res));
userRouter.route("/getnastavnikered").post((req, res) => new user_controllers_1.UserController().getnastavnicired(req, res));
userRouter.route("/potvrdanastavnikaagain").post((req, res) => new user_controllers_1.UserController().PotvrdaNastavnika2(req, res));
userRouter.route("/allNastavnik").post((req, res) => new user_controllers_1.UserController().getAllNastavnik(req, res));
userRouter.route("/allUcenici").post((req, res) => new user_controllers_1.UserController().getAllUcenik(req, res));
userRouter.route("/allCasovi").post((req, res) => new user_controllers_1.UserController().getAllCasovi(req, res));
userRouter.route("/casoviseven").post((req, res) => new user_controllers_1.UserController().casgetseven(req, res));
userRouter.route("/casovimonth").post((req, res) => new user_controllers_1.UserController().casgetMonth(req, res));
userRouter.route("/updatepass").post((req, res) => new user_controllers_1.UserController().updatePassNoSafety(req, res));
userRouter.route("/getCasoviNastavnik").post((req, res) => new user_controllers_1.UserController().getCasoviNastavnika(req, res));
userRouter.route("/updateCas").post((req, res) => new user_controllers_1.UserController().updateCas(req, res));
userRouter.route("/updateSlika").post((req, res) => new user_controllers_1.UserController().updateSlika(req, res));
userRouter.route("/updateSlikaNastavnik").post((req, res) => new user_controllers_1.UserController().updateSlikaNastavnik(req, res));
userRouter.route("/updateCV").post((req, res) => new user_controllers_1.UserController().updateCV(req, res));
userRouter.route("/ucenikPotvrdjeni").post((req, res) => new user_controllers_1.UserController().ucenikGetPotvrdjeni(req, res));
userRouter.route("/otkaznotif").post((req, res) => new user_controllers_1.UserController().OtkazObavestenje(req, res));
userRouter.route("/potvrdanotif").post((req, res) => new user_controllers_1.UserController().PotvrdaObavestenje(req, res));
userRouter.route("/updatepassSafetyQ").post((req, res) => new user_controllers_1.UserController().updatePassSafety(req, res));
userRouter.route("/casgetALL").post((req, res) => new user_controllers_1.UserController().casgetAll(req, res));
userRouter.route("/mailchecknastavnik").post((req, res) => new user_controllers_1.UserController().mailcheck(req, res));
exports.default = userRouter;
