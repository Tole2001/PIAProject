{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginservisService {\n  constructor(http) {\n    this.http = http;\n  }\n  register(user) {\n    return this.http.post(\"http://localhost:4000/users/register\", user);\n  }\n  registerN(user) {\n    return this.http.post(\"http://localhost:4000/users/registernastavnik\", user);\n  }\n  login(username, password) {\n    const data = {\n      username: username,\n      password: password\n    };\n    return this.http.post(\"http://localhost:4000/users/login\", data);\n  }\n  getucenik(username) {\n    const data = {\n      username: username\n    };\n    return this.http.post(\"http://localhost:4000/users/getucenik\", data);\n  }\n  updateucenik(u) {\n    return this.http.post(\"http://localhost:4000/users/updateucenik\", u);\n  }\n  getnastavniciporazred(br) {\n    let data = {\n      broj: br\n    };\n    return this.http.post(\"http://localhost:4000/users/getnastavniciporazred\", data);\n  }\n  getnastavnik(user) {\n    let data = {\n      username: user\n    };\n    return this.http.post(\"http://localhost:4000/users/getnastavnik\", data);\n  }\n  searchnastavnik(name2) {\n    let data = {\n      name: name2\n    };\n    return this.http.post(\"http://localhost:4000/users/nastavnikpretraga\", data);\n  }\n  createcas(cas) {\n    return this.http.post(\"http://localhost:4000/users/napravicas\", cas);\n  }\n  static #_ = this.ɵfac = function LoginservisService_Factory(t) {\n    return new (t || LoginservisService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginservisService,\n    factory: LoginservisService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["LoginservisService","constructor","http","register","user","post","registerN","login","username","password","data","getucenik","updateucenik","u","getnastavniciporazred","br","broj","getnastavnik","searchnastavnik","name2","name","createcas","cas","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Teodor\\Desktop\\PIAPROJEKAT\\frontend\\src\\app\\servisi\\loginservis.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Ucenik } from '../models/ucenik';\nimport { Message } from '../models/message';\nimport { Nastavnik } from '../models/nastavnik';\nimport { User } from '../models/user';\nimport { Cas } from '../models/cas';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginservisService {\n\n  constructor(private http: HttpClient) { }\n\n  register(user: Ucenik){\n    return this.http.post<Message>(\"http://localhost:4000/users/register\",user)\n  }\n\n  registerN(user: Nastavnik){\n    return this.http.post<Message>(\"http://localhost:4000/users/registernastavnik\",user)\n  }\n\n\n  login(username: string, password: string){\n    const data={\n      username: username,\n      password: password\n    }\n    return this.http.post<User>(\"http://localhost:4000/users/login\", data)\n  }\n\n  getucenik(username: string){\n    const data={\n      username: username,\n\n    }\n    return this.http.post<Ucenik>(\"http://localhost:4000/users/getucenik\", data)\n  }\n\n\n  updateucenik(u: Ucenik){\n\n    return this.http.post<Message>(\"http://localhost:4000/users/updateucenik\", u)\n  }\n\n  getnastavniciporazred(br : number){\n    let data = {\n      broj: br\n    }\n    return this.http.post<Nastavnik[]>(\"http://localhost:4000/users/getnastavniciporazred\", data)\n  }\n\n  getnastavnik(user : string){\n    let data = {\n      username: user\n    }\n    return this.http.post<Nastavnik>(\"http://localhost:4000/users/getnastavnik\", data)\n  }\n\n  searchnastavnik(name2 : string){\n    let data = {\n      name : name2\n    }\n    return this.http.post<Nastavnik[]>(\"http://localhost:4000/users/nastavnikpretraga\", data)\n  }\n\n  createcas(cas : Cas){\n    return this.http.post<Message>(\"http://localhost:4000/users/napravicas\", cas)\n  }\n\n}\n"],"mappings":";;AAWA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAACC,IAAY;IACnB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAU,sCAAsC,EAACD,IAAI,CAAC;EAC7E;EAEAE,SAASA,CAACF,IAAe;IACvB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAU,+CAA+C,EAACD,IAAI,CAAC;EACtF;EAGAG,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,MAAMC,IAAI,GAAC;MACTF,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;KACX;IACD,OAAO,IAAI,CAACP,IAAI,CAACG,IAAI,CAAO,mCAAmC,EAAEK,IAAI,CAAC;EACxE;EAEAC,SAASA,CAACH,QAAgB;IACxB,MAAME,IAAI,GAAC;MACTF,QAAQ,EAAEA;KAEX;IACD,OAAO,IAAI,CAACN,IAAI,CAACG,IAAI,CAAS,uCAAuC,EAAEK,IAAI,CAAC;EAC9E;EAGAE,YAAYA,CAACC,CAAS;IAEpB,OAAO,IAAI,CAACX,IAAI,CAACG,IAAI,CAAU,0CAA0C,EAAEQ,CAAC,CAAC;EAC/E;EAEAC,qBAAqBA,CAACC,EAAW;IAC/B,IAAIL,IAAI,GAAG;MACTM,IAAI,EAAED;KACP;IACD,OAAO,IAAI,CAACb,IAAI,CAACG,IAAI,CAAc,mDAAmD,EAAEK,IAAI,CAAC;EAC/F;EAEAO,YAAYA,CAACb,IAAa;IACxB,IAAIM,IAAI,GAAG;MACTF,QAAQ,EAAEJ;KACX;IACD,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAY,0CAA0C,EAAEK,IAAI,CAAC;EACpF;EAEAQ,eAAeA,CAACC,KAAc;IAC5B,IAAIT,IAAI,GAAG;MACTU,IAAI,EAAGD;KACR;IACD,OAAO,IAAI,CAACjB,IAAI,CAACG,IAAI,CAAc,+CAA+C,EAAEK,IAAI,CAAC;EAC3F;EAEAW,SAASA,CAACC,GAAS;IACjB,OAAO,IAAI,CAACpB,IAAI,CAACG,IAAI,CAAU,wCAAwC,EAAEiB,GAAG,CAAC;EAC/E;EAAC,QAAAC,CAAA,G;qBA1DUvB,kBAAkB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlB5B,kBAAkB;IAAA6B,OAAA,EAAlB7B,kBAAkB,CAAA8B,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}