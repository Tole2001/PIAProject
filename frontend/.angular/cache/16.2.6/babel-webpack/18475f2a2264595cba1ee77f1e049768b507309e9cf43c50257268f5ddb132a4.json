{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Nastavnik } from '../models/nastavnik';\nimport { Helper } from '../models/helper';\nexport let NastavnikComponent = class NastavnikComponent {\n  constructor(servis, router, cdr) {\n    this.servis = servis;\n    this.router = router;\n    this.cdr = cdr;\n    this.where = 1;\n    this.displayCasovi = 1;\n    this.username = \"nastavnik3\";\n    this.nastavnik = new Nastavnik();\n    this.edited = new Nastavnik();\n    this.selectedAges = [];\n    this.casthree = [];\n    this.firstFiveElements = [];\n    this.casovizapotvrdu = [];\n    this.casovizaucenike = [];\n    this.ucenici = [];\n    this.ucenicinodupes = [];\n    this.helper = [];\n    this.predmeti = [];\n    this.selectedPredmeti = [];\n    this.backend = \"http://localhost:4000\";\n    this.imgRel = \"http://localhost:4000\";\n    this.selectedFile = null;\n    this.selectedPDF = null;\n    this.imageUrl = \"\";\n    this.pdfUrl = \"\";\n    this.updatedpdfUrl = \"\";\n    this.zaOpenPDF = \"\";\n    this.mails = [];\n    this.allCasovi = [];\n    this.odbijenKomentar = \"\";\n  }\n  ngOnInit() {\n    this.where = 1;\n    this.username = \"nastavnik3\";\n    let logged = localStorage.getItem(\"nastavnik\");\n    if (!logged) {\n      console.log(\"AM HERE\");\n      this.router.navigate(['login']);\n    } else {\n      this.username = logged;\n    }\n    this.servis.getpredmeti(1).subscribe(data => {\n      if (data) this.predmeti = data;\n    });\n    this.servis.getAllNastavnik().subscribe(nst => {\n      this.servis.getAllUcenici().subscribe(ucenici => {\n        for (let a of ucenici) {\n          this.mails.push(a.email);\n        }\n        for (let b of nst) {\n          this.mails.push(b.email);\n        }\n      });\n    });\n    this.servis.getnastavnik(this.username).subscribe(nst => {\n      this.nastavnik = nst;\n      this.imgRel += nst.profilePic;\n      this.zaOpenPDF = nst.CV;\n      this.pdfUrl = this.backend + nst.CV;\n    });\n    this.selectedAges = [];\n    this.edited = new Nastavnik();\n    this.servis.getpotvrda(this.username).subscribe(casovi => {\n      this.casovizapotvrdu = casovi;\n      for (let a of this.casovizapotvrdu) {\n        a.startDisplayTime = new Date(a.datumvreme);\n        a.endDisplayTime = new Date(a.datumvremekraj);\n        a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1);\n        a.endDisplayTime.setHours(a.endDisplayTime.getHours() - 1);\n        this.servis.getucenik(a.ucenik).subscribe(ucenik => {\n          if (ucenik) {\n            a.ucenikName = ucenik.name;\n            a.ucenikSurname = ucenik.surname;\n          }\n        });\n        if (a.endDisplayTime.getHours() - a.startDisplayTime.getHours() === 2) {\n          a.isduble = 1;\n        }\n        this.servis.casget(1, a.ucenik).subscribe(data => {\n          if (data) {\n            let sum = 0;\n            let num = 0;\n            for (let cas of data) {\n              if (cas.ocena !== 0) {\n                num++;\n                sum += cas.ocena;\n              }\n            }\n            if (num >= 3) {\n              a.avgOcena = sum / num;\n            }\n          }\n        });\n      }\n    });\n    this.servis.casGETALL(this.username).subscribe(casovi => {\n      this.allCasovi = casovi;\n      this.allCasovi = this.allCasovi.filter(dt => new Date(dt.datumvreme) >= new Date());\n      for (let a of this.allCasovi) {\n        a.startDisplayTime = new Date(a.datumvreme);\n        a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1);\n        if (a.endDisplayTime.getHours() - a.startDisplayTime.getHours() === 2) {\n          a.isduble = 1;\n        }\n        this.servis.getucenik(a.ucenik).subscribe(ucenik => {\n          if (ucenik) {\n            a.ucenikName = ucenik.name;\n            a.ucenikSurname = ucenik.surname;\n          }\n        });\n      }\n    });\n    this.servis.getthree(this.username).subscribe(casovi => {\n      this.casthree = casovi;\n      for (let a of this.casthree) {\n        a.startDisplayTime = new Date(a.datumvreme);\n        a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1);\n        if (a.endDisplayTime.getHours() - a.startDisplayTime.getHours() === 2) {\n          a.isduble = 1;\n        }\n        this.servis.getucenik(a.ucenik).subscribe(ucenik => {\n          if (ucenik) {\n            a.ucenikName = ucenik.name;\n            a.ucenikSurname = ucenik.surname;\n          }\n        });\n      }\n    });\n    this.servis.getsvojeucenike(this.username).subscribe(casovi => {\n      this.casovizaucenike = casovi;\n      for (let cas of this.casovizaucenike) {\n        this.ucenici.push(cas.ucenik);\n      }\n      this.ucenicinodupes = Array.from(new Set(this.ucenici));\n      for (let ucenik of this.ucenicinodupes) {\n        let hlp = new Helper();\n        hlp.ucenik = ucenik;\n        this.helper.push(hlp);\n      }\n    });\n  }\n  updateCas(cas) {\n    if (cas.ocena > 5 || cas.ocena < 0) {\n      alert(\"Ocena moze biti od 1 do 5 \");\n      return;\n    }\n    this.servis.updateCas(cas).subscribe(data => {\n      console.log(data.message);\n    });\n    for (let a of this.helper) {\n      if (a.ucenik === cas.ucenik) {\n        for (let b of a.casovi) {\n          if (cas.datumvreme === b.datumvreme) {\n            b.ocena = cas.ocena;\n            b.komentar = cas.komentar;\n            return;\n          }\n        }\n      }\n    }\n    //this.servis.getsvojeucenike(this.username).subscribe(casovi=>{\n    //this.casovizaucenike = casovi\n    //for (let cas of this.casovizaucenike){\n    // this.ucenici.push(cas.ucenik)\n    //}\n    //this.ucenicinodupes = Array.from(new Set(this.ucenici))\n    //this.helper = []\n    //for (let ucenik of this.ucenicinodupes){\n    //   let hlp = new Helper()\n    //    hlp.ucenik = ucenik\n    //  this.helper.push(hlp)\n    // }\n    //})\n  }\n\n  getAll(name) {\n    if (name.toggle) {\n      name.toggle = 0;\n    } else {\n      name.toggle = 1;\n    }\n  }\n  changeWhere(b) {\n    this.where = b;\n    if (b == 3) {\n      for (let hlp of this.helper) {\n        this.servis.getdosije(hlp.ucenik, this.username).subscribe(casovi => {\n          hlp.casovi = casovi;\n        });\n      }\n    }\n  }\n  changeDisplay(b) {\n    this.displayCasovi = b;\n  }\n  saveChanges() {\n    if (this.selectedPredmeti.length === 0) {\n      this.edited.predmeti = this.nastavnik.predmeti;\n    } else {\n      this.edited.predmeti = this.selectedPredmeti;\n    }\n    this.edited.username = this.nastavnik.username;\n    if (this.edited.name === \"\") this.edited.name = this.nastavnik.name;\n    if (this.edited.surname === \"\") this.edited.surname = this.nastavnik.surname;\n    if (this.edited.adress === \"\") this.edited.adress = this.nastavnik.adress;\n    if (this.edited.email === \"\") {\n      this.edited.email = this.nastavnik.email;\n    } else {\n      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (!emailRegex.test(this.edited.email)) {\n        alert(\"Format mail-a je los\");\n        this.edited = new Nastavnik();\n        return;\n      }\n      if (this.mails.includes(this.edited.email)) {\n        alert(\"Mail je vec u upotrebi\");\n        this.edited = new Nastavnik();\n        return;\n      }\n    }\n    if (this.edited.telephone === \"\") {\n      this.edited.telephone = this.nastavnik.telephone;\n    } else {\n      const regex = /^[0-9]+$/;\n      if (!regex.test(this.edited.telephone)) {\n        alert(\"Telefon moraju biti brojevi\");\n        this.edited = new Nastavnik();\n        return;\n      }\n    }\n    if (this.selectedAges.length === 0) {\n      this.edited.razredi = this.nastavnik.razredi;\n    } else {\n      this.edited.razredi = this.selectedAges;\n    }\n    this.servis.updatenastavnik(this.edited).subscribe(data => {\n      if (data.message === \"uspesnoupdated\") {\n        this.nastavnik.name = this.edited.name;\n        this.nastavnik.surname = this.edited.surname;\n        this.nastavnik.adress = this.edited.adress;\n        this.nastavnik.email = this.edited.email;\n        this.nastavnik.telephone = this.edited.telephone;\n        this.nastavnik.predmeti = this.edited.predmeti;\n        this.nastavnik.razredi = this.edited.razredi;\n        this.edited = new Nastavnik();\n        this.mails = [];\n        this.servis.getAllNastavnik().subscribe(nst => {\n          this.servis.getAllUcenici().subscribe(ucenici => {\n            for (let a of ucenici) {\n              this.mails.push(a.email);\n            }\n            for (let b of nst) {\n              this.mails.push(b.email);\n            }\n          });\n        });\n      }\n    });\n    //this.servis.getnastavnik(this.username).subscribe(nst=>{\n    //  this.nastavnik = nst\n    //})\n    //this.ngOnInit()\n  }\n\n  toggleAge(age) {\n    if (this.selectedAges.includes(age)) {\n      this.selectedAges = this.selectedAges.filter(item => item !== age);\n    } else {\n      // Dodaj uzrast ako ne postoji u nizu\n      this.selectedAges.push(age);\n    }\n  }\n  prihvatiCas(cas) {\n    this.servis.potvrdiCas(cas.datumvreme, this.username, 1, cas._id).subscribe(data => {});\n    this.servis.getthree(this.username).subscribe(casovi => {\n      this.casthree = casovi;\n      this.casovizapotvrdu = this.casovizapotvrdu.filter(cs => cs._id !== cas._id);\n      for (let a of this.casthree) {\n        a.startDisplayTime = new Date(a.datumvreme);\n        a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1);\n        this.servis.getucenik(a.ucenik).subscribe(ucenik => {\n          if (ucenik) {\n            a.ucenikName = ucenik.name;\n            a.ucenikSurname = ucenik.surname;\n          }\n        });\n      }\n      this.servis.casGETALL(this.username).subscribe(casovi => {\n        this.allCasovi = casovi;\n        this.allCasovi = this.allCasovi.filter(dt => new Date(dt.datumvreme) >= new Date());\n        for (let a of this.allCasovi) {\n          a.startDisplayTime = new Date(a.datumvreme);\n          a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1);\n          this.servis.getucenik(a.ucenik).subscribe(ucenik => {\n            if (ucenik) {\n              a.ucenikName = ucenik.name;\n              a.ucenikSurname = ucenik.surname;\n            }\n          });\n        }\n      });\n    });\n  }\n  odbijCas(cas) {\n    if (cas.komentar === \"\") {\n      alert(\"Morate reci zasto ste odbili cas\");\n      return;\n    }\n    this.servis.potvrdiCas(cas.datumvreme, this.username, 2, cas._id).subscribe(data => {});\n    this.servis.updateCas(cas).subscribe(data => {});\n    this.casovizapotvrdu = this.casovizapotvrdu.filter(cs => cs._id !== cas._id);\n    // this.servis.getpotvrda(this.username).subscribe(casovi =>{\n    //   this.casovizapotvrdu = casovi\n    //   for(let a of this.casovizapotvrdu){\n    //     this.servis.casget(1,a.ucenik).subscribe(data=>{\n    //       if(data){\n    //         let sum = 0\n    //         let num = 0\n    //         for(let cas of data){\n    //           if(cas.ocena !== 0){\n    //             num++;\n    //             sum += cas.ocena\n    //           }\n    //         }\n    //         if(num >= 3){\n    //           a.avgOcena = sum/num\n    //         }\n    //       }\n    //     })\n    //   }\n    // })\n    this.servis.getthree(this.username).subscribe(casovi => {\n      this.casthree = casovi;\n      for (let a of this.casthree) {\n        a.startDisplayTime = new Date(a.datumvreme);\n        a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1);\n        this.servis.getucenik(a.ucenik).subscribe(ucenik => {\n          if (ucenik) {\n            a.ucenikName = ucenik.name;\n            a.ucenikSurname = ucenik.surname;\n          }\n        });\n      }\n      this.servis.casGETALL(this.username).subscribe(casovi => {\n        this.allCasovi = casovi;\n        this.allCasovi = this.allCasovi.filter(dt => new Date(dt.datumvreme) >= new Date());\n        for (let a of this.allCasovi) {\n          a.startDisplayTime = new Date(a.datumvreme);\n          a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1);\n          this.servis.getucenik(a.ucenik).subscribe(ucenik => {\n            if (ucenik) {\n              a.ucenikName = ucenik.name;\n              a.ucenikSurname = ucenik.surname;\n            }\n          });\n        }\n      });\n    });\n  }\n  odrziCas(datum, cas) {\n    cas.hidden = 0;\n    this.servis.odrziCas(datum, this.username, 1).subscribe(data => {});\n    //this.servis.getpotvrda(this.username).subscribe(casovi =>{\n    //  this.casovizapotvrdu = casovi\n    //})\n    this.servis.getsvojeucenike(this.username).subscribe(casovi => {\n      this.casovizaucenike = casovi;\n      for (let cas of this.casovizaucenike) {\n        this.ucenici.push(cas.ucenik);\n      }\n      this.ucenicinodupes = Array.from(new Set(this.ucenici));\n      this.helper = [];\n      for (let ucenik of this.ucenicinodupes) {\n        let hlp = new Helper();\n        hlp.ucenik = ucenik;\n        this.helper.push(hlp);\n      }\n    });\n    this.casthree = this.casthree.filter(dt => dt._id !== cas._id);\n    this.allCasovi = this.allCasovi.filter(dt => dt._id !== cas._id);\n    //this.servis.getthree(this.username).subscribe(casovi =>{\n    //  this.casthree = casovi\n    //})\n  }\n\n  otkazi(datum, cas) {\n    cas.hidden = 0;\n    if (cas.komentar === \"\") {\n      alert(\"Obrazlozenje zasto je otkazan\");\n      return;\n    }\n    this.servis.odrziCas(datum, this.username, 2).subscribe(data => {});\n    //this.servis.getpotvrda(this.username).subscribe(casovi =>{\n    //  this.casovizapotvrdu = casovi\n    //})\n    this.servis.updateCas(cas).subscribe(data => {});\n    this.servis.getsvojeucenike(this.username).subscribe(casovi => {\n      this.casovizaucenike = casovi;\n      for (let cas of this.casovizaucenike) {\n        this.ucenici.push(cas.ucenik);\n      }\n      this.ucenicinodupes = Array.from(new Set(this.ucenici));\n      this.helper = [];\n      for (let ucenik of this.ucenicinodupes) {\n        let hlp = new Helper();\n        hlp.ucenik = ucenik;\n        this.helper.push(hlp);\n      }\n    });\n    this.casthree = this.casthree.filter(dt => dt._id !== cas._id);\n    this.allCasovi = this.allCasovi.filter(dt => dt._id !== cas._id);\n    //this.servis.getthree(this.username).subscribe(casovi =>{\n    //  this.casthree = casovi\n    //})\n  }\n\n  LogOut() {\n    localStorage.clear();\n    this.router.navigate(['']);\n  }\n  toggleSelection(predmet) {\n    if (this.selectedPredmeti.includes(predmet)) {\n      this.selectedPredmeti = this.selectedPredmeti.filter(p => p !== predmet);\n    } else {\n      this.selectedPredmeti.push(predmet);\n    }\n  }\n  openPdf() {\n    if (this.pdfUrl) {\n      console.log(this.pdfUrl);\n      window.open(this.pdfUrl, '_blank');\n    }\n  }\n  onImageSelected(event) {\n    this.selectedFile = event.target.files[0];\n    const fileReader = new FileReader();\n    if (!this.selectedFile) {\n      // If no file is selected (file input field is empty), set showPic to 0\n      this.selectedFile = null; // Clear the selected file\n      return;\n    }\n    fileReader.onload = e => {\n      const img = new Image();\n      img.src = fileReader.result;\n      img.onload = () => {\n        const width = img.width;\n        const height = img.height;\n        if (width >= 100 && width <= 300 && height >= 100 && height <= 300) {\n          console.log(\"Image dimensions are valid:\", width, \"x\", height);\n          this.uploadTest().then(() => {\n            this.imgRel = this.backend + this.imageUrl;\n            this.edited.profilePic = this.imageUrl;\n            this.servis.updateSlikaNastavnik(this.nastavnik.username, this.imageUrl).subscribe(rez => {});\n          });\n        } else {\n          alert(\"Image dimensions are invalid:\" + width + \"x\" + height);\n          console.log(\"Image dimensions are invalid:\", width, \"x\", height);\n          this.selectedFile = null; // Clear the selected file\n          return;\n        }\n      };\n    };\n    fileReader.readAsDataURL(this.selectedFile);\n  }\n  onPdfSelected(event) {\n    this.selectedPDF = event.target.files[0];\n    if (!this.selectedPDF) {\n      // If no file is selected (file input field is empty), reset selectedPDF and return\n      this.selectedPDF = null;\n      return;\n    }\n    if (this.selectedPDF.size > 3 * 1024 * 1024) {\n      this.selectedPDF = null;\n      alert(\"CV ne sme imati vise od 3MB\");\n      return;\n    }\n    this.uploadPDF().then(() => {\n      this.servis.updateCV(this.nastavnik.username, this.updatedpdfUrl).subscribe(rez => {});\n      this.zaOpenPDF = this.updatedpdfUrl;\n      this.pdfUrl = this.backend + this.updatedpdfUrl;\n    });\n  }\n  uploadTest() {\n    return new Promise((resolve, reject) => {\n      this.servis.uploadPicture(this.selectedFile).subscribe(data => {\n        if (data && data.filename) {\n          console.log('File uploaded successfully.');\n          this.imageUrl = data.filename;\n          resolve();\n        } else {\n          reject(new Error('Upload failed'));\n        }\n      });\n    });\n  }\n  uploadPDF() {\n    return new Promise((resolve, reject) => {\n      this.servis.uploadPicture(this.selectedPDF).subscribe(data => {\n        if (data && data.filename) {\n          console.log('File uploaded successfully.');\n          this.updatedpdfUrl = data.filename;\n          console.log(this.updatedpdfUrl);\n          resolve();\n        } else {\n          reject(new Error('Upload failed'));\n        }\n      });\n    });\n  }\n  isWithinFifteenMinutes(dateTimeString) {\n    let zahtevDateTime = new Date(dateTimeString);\n    let currentDateTime = new Date();\n    let differenceInMilliseconds = zahtevDateTime.getTime() - currentDateTime.getTime();\n    let differenceInMinutes = differenceInMilliseconds / (1000 * 60);\n    return differenceInMinutes <= 15 && differenceInMinutes > 0;\n  }\n  iswithin4Hurs(date) {\n    let zahtevDateTime = new Date(date);\n    let currentDateTime = new Date();\n    let differenceInMilliseconds = zahtevDateTime.getTime() - currentDateTime.getTime();\n    let differenceInHours = differenceInMilliseconds / (1000 * 60 * 60);\n    return differenceInHours <= 4 && differenceInHours > 0;\n  }\n};\nNastavnikComponent = __decorate([Component({\n  selector: 'app-nastavnik',\n  templateUrl: './nastavnik.component.html',\n  styleUrls: ['./nastavnik.component.css']\n})], NastavnikComponent);\n//<div class=\"icon-wrapper\">\n//                      CV:\n//                      <input class=\"btn-outline-dark \" type=\"file\" (change)=\"onPdfSelected($event)\" accept=\".pdf\" />\n//                      <mat-icon class=\"icon\" fontIcon=\"edit\"></mat-icon>\n//                    </div>","map":{"version":3,"names":["Component","Nastavnik","Helper","NastavnikComponent","constructor","servis","router","cdr","where","displayCasovi","username","nastavnik","edited","selectedAges","casthree","firstFiveElements","casovizapotvrdu","casovizaucenike","ucenici","ucenicinodupes","helper","predmeti","selectedPredmeti","backend","imgRel","selectedFile","selectedPDF","imageUrl","pdfUrl","updatedpdfUrl","zaOpenPDF","mails","allCasovi","odbijenKomentar","ngOnInit","logged","localStorage","getItem","console","log","navigate","getpredmeti","subscribe","data","getAllNastavnik","nst","getAllUcenici","a","push","email","b","getnastavnik","profilePic","CV","getpotvrda","casovi","startDisplayTime","Date","datumvreme","endDisplayTime","datumvremekraj","setHours","getHours","getucenik","ucenik","ucenikName","name","ucenikSurname","surname","isduble","casget","sum","num","cas","ocena","avgOcena","casGETALL","filter","dt","getthree","getsvojeucenike","Array","from","Set","hlp","updateCas","alert","message","komentar","getAll","toggle","changeWhere","getdosije","changeDisplay","saveChanges","length","adress","emailRegex","test","includes","telephone","regex","razredi","updatenastavnik","toggleAge","age","item","prihvatiCas","potvrdiCas","_id","cs","odbijCas","odrziCas","datum","hidden","otkazi","LogOut","clear","toggleSelection","predmet","p","openPdf","window","open","onImageSelected","event","target","files","fileReader","FileReader","onload","e","img","Image","src","result","width","height","uploadTest","then","updateSlikaNastavnik","rez","readAsDataURL","onPdfSelected","size","uploadPDF","updateCV","Promise","resolve","reject","uploadPicture","filename","Error","isWithinFifteenMinutes","dateTimeString","zahtevDateTime","currentDateTime","differenceInMilliseconds","getTime","differenceInMinutes","iswithin4Hurs","date","differenceInHours","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Teodor\\Desktop\\PIAPROJEKAT\\frontend\\src\\app\\nastavnik\\nastavnik.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LoginservisService } from '../servisi/loginservis.service';\nimport { Nastavnik } from '../models/nastavnik';\nimport { Cas } from '../models/cas';\nimport { Helper } from '../models/helper';\nimport { Router } from '@angular/router';\nimport { Predmet } from '../models/predmet';\nimport { ChangeDetectorRef } from '@angular/core';\n\n\n@Component({\n  selector: 'app-nastavnik',\n  templateUrl: './nastavnik.component.html',\n  styleUrls: ['./nastavnik.component.css']\n})\nexport class NastavnikComponent {\n  constructor(private servis : LoginservisService, private router : Router, private cdr: ChangeDetectorRef ) {}\n\n  where : number = 1\n  displayCasovi : number = 1\n  username : string = \"nastavnik3\"\n  nastavnik : Nastavnik = new Nastavnik()\n  edited : Nastavnik = new Nastavnik()\n  selectedAges: string[] = [];\n  casthree : Cas[] = []\n  firstFiveElements: Cas[] = []\n  casovizapotvrdu : Cas[] = []\n  casovizaucenike : Cas[] = []\n  ucenici : string[] = []\n  ucenicinodupes : string[] = []\n  helper : Helper[] = []\n  predmeti : Predmet[] = []\n  selectedPredmeti: string[] = []\n  backend: string = \"http://localhost:4000\"\n  imgRel: string = \"http://localhost:4000\"\n  selectedFile: File | null = null;\n  selectedPDF: File | null = null;\n  imageUrl : string = \"\"\n  pdfUrl : string = \"\"\n  updatedpdfUrl : string = \"\"\n  zaOpenPDF : string = \"\"\n  mails : string[] = []\n  allCasovi : Cas[] = []\n  odbijenKomentar : string = \"\"\n\n  ngOnInit(){\n    this.where = 1\n    this.username = \"nastavnik3\"\n    let logged = localStorage.getItem(\"nastavnik\")\n    if(!logged){\n      console.log(\"AM HERE\")\n\n      this.router.navigate(['login']);\n    }else{\n      this.username = logged\n    }\n    this.servis.getpredmeti(1).subscribe(data=>{\n      if(data)this.predmeti = data\n\n    })\n    this.servis.getAllNastavnik().subscribe(nst=>{\n      this.servis.getAllUcenici().subscribe(ucenici=>{\n        for(let a of ucenici){\n          this.mails.push(a.email)\n        }\n        for(let b of nst){\n          this.mails.push(b.email)\n        }\n      })\n    })\n    this.servis.getnastavnik(this.username).subscribe(nst=>{\n      this.nastavnik = nst\n      this.imgRel += nst.profilePic\n      this.zaOpenPDF = nst.CV\n      this.pdfUrl = this.backend + nst.CV\n\n    })\n    this.selectedAges = []\n    this.edited = new Nastavnik()\n    this.servis.getpotvrda(this.username).subscribe(casovi =>{\n      this.casovizapotvrdu = casovi\n\n\n      for(let a of this.casovizapotvrdu){\n        a.startDisplayTime = new Date(a.datumvreme)\n        a.endDisplayTime = new Date(a.datumvremekraj)\n        a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1)\n        a.endDisplayTime.setHours(a.endDisplayTime.getHours() - 1)\n        this.servis.getucenik(a.ucenik).subscribe(ucenik=>{\n          if(ucenik){\n            a.ucenikName = ucenik.name\n            a.ucenikSurname = ucenik.surname\n          }\n        })\n        if(a.endDisplayTime.getHours() - a.startDisplayTime.getHours() === 2){\n          a.isduble = 1\n        }\n        this.servis.casget(1,a.ucenik).subscribe(data=>{\n          if(data){\n            let sum = 0\n            let num = 0\n            for(let cas of data){\n              if(cas.ocena !== 0){\n                num++;\n                sum += cas.ocena\n              }\n            }\n            if(num >= 3){\n              a.avgOcena = sum/num\n            }\n          }\n        })\n      }\n    })\n    this.servis.casGETALL(this.username).subscribe(casovi=>{\n      this.allCasovi = casovi\n      this.allCasovi = this.allCasovi.filter(dt => new Date(dt.datumvreme) >= new Date())\n      for(let a of this.allCasovi){\n\n        a.startDisplayTime = new Date(a.datumvreme)\n        a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1)\n        if(a.endDisplayTime.getHours() - a.startDisplayTime.getHours() === 2){\n          a.isduble = 1\n        }\n        this.servis.getucenik(a.ucenik).subscribe(ucenik=>{\n          if(ucenik){\n            a.ucenikName = ucenik.name\n            a.ucenikSurname = ucenik.surname\n          }\n        })\n      }\n    })\n    this.servis.getthree(this.username).subscribe(casovi =>{\n      this.casthree = casovi\n      for(let a of this.casthree){\n        a.startDisplayTime = new Date(a.datumvreme)\n        a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1)\n        if(a.endDisplayTime.getHours() - a.startDisplayTime.getHours() === 2){\n          a.isduble = 1\n        }\n        this.servis.getucenik(a.ucenik).subscribe(ucenik=>{\n          if(ucenik){\n            a.ucenikName = ucenik.name\n            a.ucenikSurname = ucenik.surname\n          }\n        })\n      }\n\n\n    })\n    this.servis.getsvojeucenike(this.username).subscribe(casovi=>{\n      this.casovizaucenike = casovi\n      for (let cas of this.casovizaucenike){\n        this.ucenici.push(cas.ucenik)\n      }\n      this.ucenicinodupes = Array.from(new Set(this.ucenici))\n      for (let ucenik of this.ucenicinodupes){\n        let hlp = new Helper()\n        hlp.ucenik = ucenik\n\n\n        this.helper.push(hlp)\n      }\n\n    })\n\n\n\n\n\n  }\n\n  updateCas(cas : Cas){\n    if(cas.ocena>5 || cas.ocena < 0){\n      alert(\"Ocena moze biti od 1 do 5 \")\n      return\n    }\n    this.servis.updateCas(cas).subscribe(data=>{\n      console.log(data.message)\n    })\n    for(let a of this.helper){\n      if(a.ucenik === cas.ucenik){\n        for(let b of a.casovi){\n          if(cas.datumvreme === b.datumvreme){\n            b.ocena = cas.ocena\n            b.komentar = cas.komentar\n            return\n          }\n        }\n      }\n    }\n\n    //this.servis.getsvojeucenike(this.username).subscribe(casovi=>{\n      //this.casovizaucenike = casovi\n      //for (let cas of this.casovizaucenike){\n       // this.ucenici.push(cas.ucenik)\n      //}\n      //this.ucenicinodupes = Array.from(new Set(this.ucenici))\n      //this.helper = []\n      //for (let ucenik of this.ucenicinodupes){\n     //   let hlp = new Helper()\n    //    hlp.ucenik = ucenik\n\n\n      //  this.helper.push(hlp)\n     // }\n\n    //})\n  }\n  getAll(name : Helper){\n    if(name.toggle){\n      name.toggle = 0\n    }else{\n\n      name.toggle = 1\n    }\n\n  }\n\n\n  changeWhere(b : number){\n    this.where = b;\n    if(b == 3){\n      for(let hlp of this.helper){\n        this.servis.getdosije(hlp.ucenik,this.username).subscribe(casovi=>{\n          hlp.casovi = casovi\n        })\n      }\n    }\n  }\n\n\n  changeDisplay(b : number){\n    this.displayCasovi = b;\n  }\n\n\n  saveChanges(){\n    if(this.selectedPredmeti.length === 0){\n      this.edited.predmeti = this.nastavnik.predmeti\n    }else{\n      this.edited.predmeti = this.selectedPredmeti\n    }\n    this.edited.username = this.nastavnik.username\n    if(this.edited.name  === \"\")this.edited.name = this.nastavnik.name\n    if(this.edited.surname  === \"\")this.edited.surname = this.nastavnik.surname\n    if(this.edited.adress  === \"\")this.edited.adress = this.nastavnik.adress\n    if(this.edited.email  === \"\"){this.edited.email = this.nastavnik.email}else{\n      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (!emailRegex.test(this.edited.email)) {\n        alert(\"Format mail-a je los\");\n        this.edited = new Nastavnik()\n        return;\n      }\n      if(this.mails.includes(this.edited.email)){\n        alert(\"Mail je vec u upotrebi\")\n        this.edited = new Nastavnik()\n        return\n      }\n    }\n    if(this.edited.telephone  === \"\"){this.edited.telephone = this.nastavnik.telephone}else{\n      const regex = /^[0-9]+$/\n      if(!regex.test(this.edited.telephone)){\n          alert(\"Telefon moraju biti brojevi\");\n          this.edited = new Nastavnik()\n          return;\n      }\n    }\n    if(this.selectedAges.length === 0){\n      this.edited.razredi = this.nastavnik.razredi\n    }else{\n      this.edited.razredi = this.selectedAges\n    }\n    this.servis.updatenastavnik(this.edited).subscribe(data=>{\n      if(data.message ===  \"uspesnoupdated\"){\n        this.nastavnik.name = this.edited.name\n        this.nastavnik.surname = this.edited.surname\n        this.nastavnik.adress = this.edited.adress\n        this.nastavnik.email = this.edited.email\n        this.nastavnik.telephone = this.edited.telephone\n        this.nastavnik.predmeti = this.edited.predmeti\n        this.nastavnik.razredi = this.edited.razredi\n        this.edited = new Nastavnik()\n        this.mails = []\n        this.servis.getAllNastavnik().subscribe(nst=>{\n          this.servis.getAllUcenici().subscribe(ucenici=>{\n            for(let a of ucenici){\n              this.mails.push(a.email)\n            }\n            for(let b of nst){\n              this.mails.push(b.email)\n            }\n          })\n        })\n      }\n    })\n    //this.servis.getnastavnik(this.username).subscribe(nst=>{\n    //  this.nastavnik = nst\n    //})\n    //this.ngOnInit()\n\n  }\n\n  toggleAge(age: string) {\n    if (this.selectedAges.includes(age)) {\n\n      this.selectedAges = this.selectedAges.filter(item => item !== age);\n    } else {\n      // Dodaj uzrast ako ne postoji u nizu\n      this.selectedAges.push(age);\n    }\n\n\n  }\n\n\n  prihvatiCas(cas : Cas){\n    this.servis.potvrdiCas(cas.datumvreme,this.username,1,cas._id).subscribe(data =>{\n\n    })\n\n\n\n\n    this.servis.getthree(this.username).subscribe(casovi =>{\n      this.casthree = casovi\n      this.casovizapotvrdu = this.casovizapotvrdu.filter(cs => cs._id !== cas._id);\n      for(let a of this.casthree){\n        a.startDisplayTime = new Date(a.datumvreme)\n        a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1)\n        this.servis.getucenik(a.ucenik).subscribe(ucenik=>{\n          if(ucenik){\n            a.ucenikName = ucenik.name\n            a.ucenikSurname = ucenik.surname\n          }\n        })\n      }\n      this.servis.casGETALL(this.username).subscribe(casovi=>{\n        this.allCasovi = casovi\n        this.allCasovi = this.allCasovi.filter(dt => new Date(dt.datumvreme) >= new Date())\n        for(let a of this.allCasovi){\n          a.startDisplayTime = new Date(a.datumvreme)\n          a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1)\n          this.servis.getucenik(a.ucenik).subscribe(ucenik=>{\n            if(ucenik){\n              a.ucenikName = ucenik.name\n              a.ucenikSurname = ucenik.surname\n            }\n          })\n        }\n      })\n\n\n    })\n\n\n\n\n  }\n\n  odbijCas(cas : Cas){\n    if(cas.komentar === \"\"){\n      alert(\"Morate reci zasto ste odbili cas\")\n      return\n    }\n    this.servis.potvrdiCas(cas.datumvreme,this.username,2,cas._id).subscribe(data =>{\n\n    })\n    this.servis.updateCas(cas).subscribe(data=>{\n\n    })\n    this.casovizapotvrdu = this.casovizapotvrdu.filter(cs => cs._id !== cas._id);\n    // this.servis.getpotvrda(this.username).subscribe(casovi =>{\n    //   this.casovizapotvrdu = casovi\n    //   for(let a of this.casovizapotvrdu){\n    //     this.servis.casget(1,a.ucenik).subscribe(data=>{\n    //       if(data){\n    //         let sum = 0\n    //         let num = 0\n    //         for(let cas of data){\n    //           if(cas.ocena !== 0){\n    //             num++;\n    //             sum += cas.ocena\n    //           }\n    //         }\n    //         if(num >= 3){\n    //           a.avgOcena = sum/num\n    //         }\n    //       }\n    //     })\n    //   }\n    // })\n    this.servis.getthree(this.username).subscribe(casovi =>{\n      this.casthree = casovi\n      for(let a of this.casthree){\n        a.startDisplayTime = new Date(a.datumvreme)\n        a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1)\n        this.servis.getucenik(a.ucenik).subscribe(ucenik=>{\n          if(ucenik){\n            a.ucenikName = ucenik.name\n            a.ucenikSurname = ucenik.surname\n          }\n        })\n      }\n      this.servis.casGETALL(this.username).subscribe(casovi=>{\n        this.allCasovi = casovi\n        this.allCasovi = this.allCasovi.filter(dt => new Date(dt.datumvreme) >= new Date())\n        for(let a of this.allCasovi){\n          a.startDisplayTime = new Date(a.datumvreme)\n          a.startDisplayTime.setHours(a.startDisplayTime.getHours() - 1)\n          this.servis.getucenik(a.ucenik).subscribe(ucenik=>{\n            if(ucenik){\n              a.ucenikName = ucenik.name\n              a.ucenikSurname = ucenik.surname\n            }\n          })\n        }\n      })\n\n    })\n\n  }\n\n  odrziCas(datum : Date, cas : Cas){\n    cas.hidden = 0\n    this.servis.odrziCas(datum,this.username,1).subscribe(data =>{\n\n    })\n    //this.servis.getpotvrda(this.username).subscribe(casovi =>{\n    //  this.casovizapotvrdu = casovi\n    //})\n\n    this.servis.getsvojeucenike(this.username).subscribe(casovi=>{\n      this.casovizaucenike = casovi\n      for (let cas of this.casovizaucenike){\n        this.ucenici.push(cas.ucenik)\n      }\n      this.ucenicinodupes = Array.from(new Set(this.ucenici))\n      this.helper = []\n      for (let ucenik of this.ucenicinodupes){\n        let hlp = new Helper()\n        hlp.ucenik = ucenik\n\n\n        this.helper.push(hlp)\n      }\n\n    })\n    this.casthree = this.casthree.filter(dt => dt._id !== cas._id)\n    this.allCasovi = this.allCasovi.filter(dt => dt._id !== cas._id)\n    //this.servis.getthree(this.username).subscribe(casovi =>{\n    //  this.casthree = casovi\n\n    //})\n\n  }\n\n\n  otkazi(datum : Date, cas : Cas){\n    cas.hidden = 0\n    if(cas.komentar === \"\"){\n      alert(\"Obrazlozenje zasto je otkazan\")\n      return\n    }\n    this.servis.odrziCas(datum,this.username,2).subscribe(data =>{\n\n    })\n    //this.servis.getpotvrda(this.username).subscribe(casovi =>{\n    //  this.casovizapotvrdu = casovi\n    //})\n    this.servis.updateCas(cas).subscribe(data=>{\n\n    })\n\n    this.servis.getsvojeucenike(this.username).subscribe(casovi=>{\n      this.casovizaucenike = casovi\n      for (let cas of this.casovizaucenike){\n        this.ucenici.push(cas.ucenik)\n      }\n      this.ucenicinodupes = Array.from(new Set(this.ucenici))\n      this.helper = []\n      for (let ucenik of this.ucenicinodupes){\n        let hlp = new Helper()\n        hlp.ucenik = ucenik\n\n\n        this.helper.push(hlp)\n      }\n\n    })\n    this.casthree = this.casthree.filter(dt => dt._id !== cas._id)\n    this.allCasovi = this.allCasovi.filter(dt => dt._id !== cas._id)\n    //this.servis.getthree(this.username).subscribe(casovi =>{\n    //  this.casthree = casovi\n\n    //})\n\n  }\n\n  LogOut(){\n    localStorage.clear()\n    this.router.navigate([''])\n  }\n\n  toggleSelection(predmet: string) {\n    if (this.selectedPredmeti.includes(predmet)) {\n      this.selectedPredmeti = this.selectedPredmeti.filter(p => p !== predmet);\n    } else {\n      this.selectedPredmeti.push(predmet);\n    }\n  }\n\n  openPdf() {\n    if (this.pdfUrl) {\n      console.log(this.pdfUrl)\n      window.open(this.pdfUrl, '_blank');\n    }\n  }\n\n  onImageSelected(event: any): void {\n    this.selectedFile = event.target.files[0];\n    const fileReader = new FileReader();\n    if (! this.selectedFile) {\n      // If no file is selected (file input field is empty), set showPic to 0\n      this.selectedFile = null; // Clear the selected file\n      return;\n    }\n    fileReader.onload = (e) => {\n      const img = new Image();\n      img.src = fileReader.result as string;\n      img.onload = () => {\n        const width = img.width;\n        const height = img.height;\n        if (width >= 100 && width <= 300 && height >= 100 && height <= 300) {\n          console.log(\"Image dimensions are valid:\", width, \"x\", height);\n          this.uploadTest().then(()=>{\n            this.imgRel = this.backend + this.imageUrl\n            this.edited.profilePic = this.imageUrl\n            this.servis.updateSlikaNastavnik(this.nastavnik.username,this.imageUrl).subscribe(rez=>{\n\n            })\n          })\n\n        } else {\n          alert(\"Image dimensions are invalid:\" + width + \"x\" + height)\n          console.log(\"Image dimensions are invalid:\", width, \"x\", height);\n          this.selectedFile = null; // Clear the selected file\n          return\n\n        }\n      };\n    };\n\n    fileReader.readAsDataURL(this.selectedFile!);\n\n\n  }\n\n  onPdfSelected(event: any): void {\n    this.selectedPDF = event.target.files[0];\n    if (!this.selectedPDF) {\n      // If no file is selected (file input field is empty), reset selectedPDF and return\n      this.selectedPDF = null;\n      return;\n    }\n    if (this.selectedPDF.size > 3 * 1024 * 1024) {\n      this.selectedPDF = null;\n      alert(\"CV ne sme imati vise od 3MB\");\n      return;\n    }\n    this.uploadPDF().then(()=>{\n      this.servis.updateCV(this.nastavnik.username,this.updatedpdfUrl).subscribe(rez=>{\n\n      })\n      this.zaOpenPDF = this.updatedpdfUrl\n      this.pdfUrl = this.backend + this.updatedpdfUrl\n    })\n\n\n\n  }\n\n\n  uploadTest(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.servis.uploadPicture(this.selectedFile!).subscribe(data => {\n        if (data && data.filename) {\n          console.log('File uploaded successfully.');\n          this.imageUrl = data.filename;\n\n          resolve();\n        } else {\n          reject(new Error('Upload failed'));\n        }\n      });\n    });\n  }\n\n\n  uploadPDF(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.servis.uploadPicture(this.selectedPDF!).subscribe(data => {\n        if (data && data.filename) {\n          console.log('File uploaded successfully.');\n          this.updatedpdfUrl = data.filename;\n          console.log(this.updatedpdfUrl);\n\n          resolve();\n        } else {\n          reject(new Error('Upload failed'));\n        }\n      });\n    });\n  }\n\n\n  isWithinFifteenMinutes(dateTimeString: Date): boolean {\n    let zahtevDateTime = new Date(dateTimeString);\n    let currentDateTime = new Date();\n    let differenceInMilliseconds = zahtevDateTime.getTime() - currentDateTime.getTime();\n    let differenceInMinutes = differenceInMilliseconds / (1000 * 60);\n    return differenceInMinutes <= 15 && differenceInMinutes > 0;\n  }\n\n  iswithin4Hurs(date : Date): boolean {\n    let zahtevDateTime = new Date(date);\n    let currentDateTime = new Date();\n    let differenceInMilliseconds = zahtevDateTime.getTime() - currentDateTime.getTime();\n    let differenceInHours = differenceInMilliseconds / (1000 * 60 * 60);\n    return differenceInHours <= 4 && differenceInHours > 0;\n  }\n\n\n\n\n\n\n}\n\n\n//<div class=\"icon-wrapper\">\n//                      CV:\n//                      <input class=\"btn-outline-dark \" type=\"file\" (change)=\"onPdfSelected($event)\" accept=\".pdf\" />\n//                      <mat-icon class=\"icon\" fontIcon=\"edit\"></mat-icon>\n//                    </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}