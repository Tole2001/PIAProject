{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../servisi/loginservis.service\";\nimport * as i3 from \"@angular/forms\";\nexport class ChangepassComponent {\n  constructor(router, servis) {\n    this.router = router;\n    this.servis = servis;\n    this.old = \"\";\n    this.newpass = \"\";\n    this.newpassAgain = \"\";\n    this.user = \"\";\n  }\n  changePass() {\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z]{3,})(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,10}$/;\n    if (!passwordRegex.test(this.newpass)) {\n      alert('Format sifre je los ispravi');\n      return;\n    }\n    if (this.newpassAgain !== this.newpass) {\n      alert(\"Molim vas da potvrda bude ista kao i sifra\");\n      return;\n    }\n    this.servis.updatePassNoSafety(this.user, this.old, this.newpass).subscribe(data => {\n      alert(data.message);\n    });\n  }\n  static #_ = this.ɵfac = function ChangepassComponent_Factory(t) {\n    return new (t || ChangepassComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.LoginservisService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangepassComponent,\n    selectors: [[\"app-changepass\"]],\n    decls: 16,\n    vars: 3,\n    consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function ChangepassComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \" Promena sifre\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"label\");\n        i0.ɵɵtext(3, \"Unesite username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ChangepassComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.user = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"label\");\n        i0.ɵɵtext(7, \"Unesite sifru:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ChangepassComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.newpass = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"label\");\n        i0.ɵɵtext(11, \"Unesite ponovo sifru:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ChangepassComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.newpassAgain = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelementStart(14, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ChangepassComponent_Template_button_click_14_listener() {\n          return ctx.changePass();\n        });\n        i0.ɵɵtext(15, \"ChangePass\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newpass);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newpassAgain);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["ChangepassComponent","constructor","router","servis","old","newpass","newpassAgain","user","changePass","passwordRegex","test","alert","updatePassNoSafety","subscribe","data","message","_","i0","ɵɵdirectiveInject","i1","Router","i2","LoginservisService","_2","selectors","decls","vars","consts","template","ChangepassComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ChangepassComponent_Template_input_ngModelChange_4_listener","$event","ɵɵelement","ChangepassComponent_Template_input_ngModelChange_8_listener","ChangepassComponent_Template_input_ngModelChange_12_listener","ChangepassComponent_Template_button_click_14_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Teodor\\Desktop\\PIAPROJEKAT\\frontend\\src\\app\\changepass\\changepass.component.ts","C:\\Users\\Teodor\\Desktop\\PIAPROJEKAT\\frontend\\src\\app\\changepass\\changepass.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LoginservisService } from '../servisi/loginservis.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-changepass',\n  templateUrl: './changepass.component.html',\n  styleUrls: ['./changepass.component.css']\n})\nexport class ChangepassComponent {\n  constructor(private router: Router, private servis : LoginservisService){}\n  old: string = \"\"\n  newpass : string = \"\"\n  newpassAgain : string = \"\"\n  user : string = \"\"\n\n\n  changePass(){\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z]{3,})(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,10}$/;\n    if (!passwordRegex.test(this.newpass)) {\n      alert('Format sifre je los ispravi');\n      return;\n    }\n    if(this.newpassAgain !== this.newpass){\n      alert(\"Molim vas da potvrda bude ista kao i sifra\")\n      return;\n    }\n    this.servis.updatePassNoSafety(this.user,this.old,this.newpass).subscribe(data=>{\n      alert(data.message)\n    })\n  }\n}\n","<h3>\n  Promena sifre\n</h3>\n<label>Unesite username:</label>\n<input type=\"text\" [(ngModel)]=\"user\">\n<br/>\n<label>Unesite sifru:</label>\n<input type=\"text\" [(ngModel)]=\"newpass\">\n<br/>\n<label>Unesite ponovo sifru:</label>\n<input type=\"text\" [(ngModel)]=\"newpassAgain\">\n<br/>\n<button (click) = \"changePass()\">ChangePass</button>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}