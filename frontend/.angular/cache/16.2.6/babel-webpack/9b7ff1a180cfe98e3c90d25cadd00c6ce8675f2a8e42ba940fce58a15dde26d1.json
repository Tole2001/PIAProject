{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Ucenik } from '../models/ucenik';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(servis) {\n    this.servis = servis;\n    this.user = new Ucenik();\n    this.gradeO = [1, 2, 3, 4, 5, 6, 7, 8];\n    this.gradeH = [1, 2, 3, 4];\n    this.selectedFile = null;\n    this.showPic = 0;\n    this.showIMG = \"http://localhost:4000/uploads/1707042431780.jpg\";\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  register() {\n    this.user.picture = this.selectedFile;\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z]{3,})(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,10}$/;\n    if (!passwordRegex.test(this.user.password)) {\n      alert('Format sifre je los ispravi');\n      return;\n    }\n    this.servis.register(this.user).subscribe(data => {\n      if (data.message == \"ok\") alert(\"Dodato\");\n    });\n  }\n  uploadTest() {\n    this.servis.uploadPicture(this.selectedFile).subscribe(data => {\n      if (data) {\n        console.log('File uploaded successfully.');\n        this.image = 'http://localhost:4000/uploads/' + data.filename;\n        console.log(this.image);\n      }\n    });\n  }\n  show() {\n    this.showPic = 1;\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","Ucenik","RegisterComponent","constructor","servis","user","gradeO","gradeH","selectedFile","showPic","showIMG","onFileSelected","event","target","files","register","picture","passwordRegex","test","password","alert","subscribe","data","message","uploadTest","uploadPicture","console","log","image","filename","show","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Teodor\\Desktop\\PIAPROJEKAT\\frontend\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LoginservisService } from '../servisi/loginservis.service';\nimport { Ucenik } from '../models/ucenik';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  constructor(private servis: LoginservisService) {}\n\n\n  user: Ucenik = new Ucenik()\n  gradeO : Number[] = [1,2,3,4,5,6,7,8]\n  gradeH : Number[] = [1,2,3,4]\n  selectedFile: File | null = null;\n  image : string | undefined;\n  showPic : number = 0\n  showIMG: string = \"http://localhost:4000/uploads/1707042431780.jpg\"\n\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n\n\n  register(){\n    this.user.picture = this.selectedFile;\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z]{3,})(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,10}$/;\n\n    if (!passwordRegex.test(this.user.password)) {\n      alert('Format sifre je los ispravi');\n      return;\n    }\n    this.servis.register(this.user).subscribe(\n      data=>{\n        if(data.message==\"ok\") alert(\"Dodato\")\n      }\n    )\n  }\n\n\n  uploadTest(){\n    this.servis.uploadPicture(this.selectedFile!).subscribe(data=>{\n      if(data){\n\n        console.log('File uploaded successfully.');\n        this.image = 'http://localhost:4000/uploads/' + data.filename;\n        console.log(this.image)\n      }\n    })\n  }\n\n  show(){\n    this.showPic = 1\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,MAAM,QAAQ,kBAAkB;AAOlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAC5BC,YAAoBC,MAA0B;IAA1B,KAAAA,MAAM,GAANA,MAAM;IAG1B,KAAAC,IAAI,GAAW,IAAIJ,MAAM,EAAE;IAC3B,KAAAK,MAAM,GAAc,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IACrC,KAAAC,MAAM,GAAc,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IAC7B,KAAAC,YAAY,GAAgB,IAAI;IAEhC,KAAAC,OAAO,GAAY,CAAC;IACpB,KAAAC,OAAO,GAAW,iDAAiD;EATlB;EAYjDC,cAAcA,CAACC,KAAU;IACvB,IAAI,CAACJ,YAAY,GAAGI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C;EAIAC,QAAQA,CAAA;IACN,IAAI,CAACV,IAAI,CAACW,OAAO,GAAG,IAAI,CAACR,YAAY;IACrC,MAAMS,aAAa,GAAG,4EAA4E;IAElG,IAAI,CAACA,aAAa,CAACC,IAAI,CAAC,IAAI,CAACb,IAAI,CAACc,QAAQ,CAAC,EAAE;MAC3CC,KAAK,CAAC,6BAA6B,CAAC;MACpC;;IAEF,IAAI,CAAChB,MAAM,CAACW,QAAQ,CAAC,IAAI,CAACV,IAAI,CAAC,CAACgB,SAAS,CACvCC,IAAI,IAAE;MACJ,IAAGA,IAAI,CAACC,OAAO,IAAE,IAAI,EAAEH,KAAK,CAAC,QAAQ,CAAC;IACxC,CAAC,CACF;EACH;EAGAI,UAAUA,CAAA;IACR,IAAI,CAACpB,MAAM,CAACqB,aAAa,CAAC,IAAI,CAACjB,YAAa,CAAC,CAACa,SAAS,CAACC,IAAI,IAAE;MAC5D,IAAGA,IAAI,EAAC;QAENI,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C,IAAI,CAACC,KAAK,GAAG,gCAAgC,GAAGN,IAAI,CAACO,QAAQ;QAC7DH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAAC;;IAE3B,CAAC,CAAC;EACJ;EAEAE,IAAIA,CAAA;IACF,IAAI,CAACrB,OAAO,GAAG,CAAC;EAClB;CACD;AAjDYP,iBAAiB,GAAA6B,UAAA,EAL7B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWhC,iBAAiB,CAiD7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}