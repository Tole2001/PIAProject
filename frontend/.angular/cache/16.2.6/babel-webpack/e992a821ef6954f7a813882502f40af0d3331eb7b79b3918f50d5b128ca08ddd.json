{"ast":null,"code":"import { Nastavnik } from '../models/nastavnik';\nimport { Cas } from '../models/cas';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../servisi/loginservis.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction NastavnikdetaljiComponent_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const predmet_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(predmet_r10);\n  }\n}\nfunction NastavnikdetaljiComponent_ng_container_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const razred_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(razred_r11);\n  }\n}\nfunction NastavnikdetaljiComponent_ng_container_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ocena_r12 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ocena_r12);\n  }\n}\nfunction NastavnikdetaljiComponent_ng_container_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const kom_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(kom_r13);\n  }\n}\nfunction NastavnikdetaljiComponent_ng_container_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngValue\", ctx_r5.nastavnik.predmeti[0])(\"selected\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.nastavnik.predmeti[0]);\n  }\n}\nfunction NastavnikdetaljiComponent_ng_template_37_option_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const predmet_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", predmet_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(predmet_r15);\n  }\n}\nfunction NastavnikdetaljiComponent_ng_template_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NastavnikdetaljiComponent_ng_template_37_option_0_Template, 2, 2, \"option\", 27);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.nastavnik.predmeti);\n  }\n}\nfunction NastavnikdetaljiComponent_span_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.message);\n  }\n}\nfunction NastavnikdetaljiComponent_span_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.succes);\n  }\n}\nexport class NastavnikdetaljiComponent {\n  constructor(route, servis, ruter) {\n    this.route = route;\n    this.servis = servis;\n    this.ruter = ruter;\n    this.username = \"\";\n    this.nastavnik = new Nastavnik();\n    this.cas = new Cas();\n    this.casovi = [];\n    this.ocene = [];\n    this.komentari = [];\n    this.isSpecialized = 0;\n    this.dupli = false;\n    this.message = \"\";\n    this.succes = \"\";\n    this.imgRel = \"\";\n    this.backend = \"http://localhost:4000\";\n  }\n  ngOnInit() {\n    this.message = \"\";\n    this.isSpecialized = 0;\n    this.username = this.route.snapshot.paramMap.get('username');\n    this.cas.nastavnik = this.username;\n    this.cas.ucenik = localStorage.getItem(\"logged\");\n    this.servis.getnastavnik(this.username).subscribe(nst => {\n      this.nastavnik = nst;\n      if (this.nastavnik.predmeti.length == 1) {\n        this.isSpecialized = 1;\n      }\n      this.imgRel = this.backend + nst.profilePic;\n    });\n    this.servis.getCasoviNastavnika(this.username, 1).subscribe(data => {\n      if (data) {\n        this.casovi = data;\n        for (let b of data) {\n          if (b.ocena !== 0) this.ocene.push(b.ocena);\n          if (b.komentar !== \"\") this.komentari.push(b.komentar);\n        }\n      }\n    });\n  }\n  submitForm() {\n    let novi = new Date(this.cas.datumvreme);\n    let begin = new Date(this.cas.datumvreme);\n    this.succes = \"\";\n    console.log(\"Vreme pocetka:\" + begin);\n    if (this.cas.predmet === \"\" && this.nastavnik.predmeti.length !== 1) {\n      this.message = \"Izaberite predmet\";\n      return;\n    }\n    if (this.nastavnik.predmeti.length === 1) {\n      this.cas.predmet = this.nastavnik.predmeti[0];\n    }\n    if (this.isWeekend(begin)) {\n      this.message = \"Dont't work on weekends\";\n      return;\n    }\n    if (this.dupli) {\n      novi.setMinutes(novi.getMinutes() + 120);\n    } else {\n      novi.setMinutes(novi.getMinutes() + 60);\n    }\n    console.log(\"Vreme kraja:\" + novi);\n    if (begin.getHours() < 10) {\n      this.message = \"Start time is before 10 AM\";\n      return;\n    }\n    if (novi.getHours() > 18 || novi.getHours() == 18 && novi.getMinutes() !== 0) {\n      this.message = \"End time is after 6 PM\";\n      return;\n    }\n    if (!this.checkWeek(begin, novi)) {\n      this.message = \"Nema ove nedelje otvorenih termina\";\n      return;\n    }\n    if (!this.checkDay(begin, novi)) {\n      this.message = \"Nema danas otvorenih termina\";\n      return;\n    }\n    if (!this.isValidTime(novi)) {\n      this.message = \"Cas mora biti ili na poal sata ili na okrugli sat\";\n      return;\n    }\n    //novi.setHours(novi.getHours() + 1);\n    //begin.setHours(begin.getHours() + 1);\n    this.message = \"\";\n    //this.cas.datumvreme = begin\n    ///this.cas.datumvremekraj = novi;\n    this.cas.datumvreme = new Date(begin);\n    this.cas.datumvremekraj = new Date(novi);\n    this.cas.datumvreme.setHours(this.cas.datumvreme.getHours() + 1);\n    this.cas.datumvremekraj.setHours(this.cas.datumvremekraj.getHours() + 1);\n    if (this.checkForOverlap(this.cas.datumvreme, this.cas.datumvremekraj)) {\n      this.message = \"Vec postoji cas u tom terminu\";\n      return;\n    }\n    this.message = \"\";\n    console.log(\"VREME POCETKA \" + this.cas.datumvreme.getHours());\n    this.servis.createcas(this.cas).subscribe(data => {\n      if (data.message === \"ok\") {\n        //alert(\"Zahtev za cas je poslat\")\n        this.succes = \"Zahtev za cas je poslat\";\n      }\n    });\n    this.servis.getCasoviNastavnika(this.username, 1).subscribe(data => {\n      if (data) {\n        this.casovi = data;\n      }\n    });\n  }\n  checkForOverlap(begin, novi) {\n    const beginTime = begin.getTime();\n    const noviTime = novi.getTime();\n    for (let cas of this.casovi) {\n      const casDatumvreme = new Date(cas.datumvreme).getTime();\n      const casDatumvremekraj = new Date(cas.datumvremekraj).getTime();\n      if (beginTime >= casDatumvreme && beginTime < casDatumvremekraj || noviTime > casDatumvreme && noviTime <= casDatumvremekraj || beginTime <= casDatumvreme && noviTime >= casDatumvremekraj) {\n        console.log(cas.opis);\n        //MORAS SAT DA DODAS JEDAN\n        this.message = \"Postoji cas u terminu od  \" + cas.datumvreme + \"do \" + cas.datumvremekraj;\n        return true;\n      }\n    }\n    return false;\n  }\n  isWeekend(date) {\n    const day = date.getDay();\n    return day === 0 || day === 6;\n  }\n  back() {\n    this.ruter.navigate(['ucenik']);\n  }\n  checkDay(begin, novi) {\n    const beginTime = begin.getTime();\n    const noviTime = novi.getTime();\n    const filteredCasovi = this.casovi.filter(cas => {\n      let casDate = new Date(cas.datumvreme);\n      return casDate.getFullYear() === begin.getFullYear() && casDate.getMonth() === begin.getMonth() && casDate.getDate() === begin.getDate();\n    });\n    return this.hasOpening(filteredCasovi, begin, novi);\n  }\n  checkWeek(begin, novi) {\n    let start = new Date(begin);\n    let end = new Date(novi);\n    let day = start.getDay();\n    for (day; day <= 5; day++) {\n      if (this.checkDay(start, end)) {\n        return true;\n      }\n      start.setDate(start.getDate() + 1);\n      end.setDate(end.getDate() + 1);\n    }\n    return false;\n  }\n  hasOpening(filteredCasovi, begin, novi) {\n    const openingStartTime = new Date(begin);\n    openingStartTime.setHours(10, 0, 0);\n    const openingEndTime = new Date(novi);\n    openingEndTime.setHours(18, 0, 0);\n    const sortedCasovi = filteredCasovi.sort((a, b) => {\n      const timeA = new Date(a.datumvreme).getTime();\n      const timeB = new Date(b.datumvreme).getTime();\n      return timeA - timeB;\n    });\n    for (let i = 0; i < sortedCasovi.length - 1; i++) {\n      const currentEnd = new Date(sortedCasovi[i].datumvremekraj);\n      const nextStart = new Date(sortedCasovi[i + 1].datumvreme);\n      currentEnd.setHours(currentEnd.getHours() - 1);\n      nextStart.setHours(nextStart.getHours() - 1);\n      const timeDiffMinutes = (nextStart.getTime() - currentEnd.getTime()) / (1000 * 60);\n      if (timeDiffMinutes >= 60) {\n        return true;\n      }\n    }\n    if (sortedCasovi.length === 0) {\n      return true;\n    }\n    const lastAppointmentEnd = new Date(sortedCasovi[sortedCasovi.length - 1].datumvremekraj);\n    lastAppointmentEnd.setHours(lastAppointmentEnd.getHours() - 1);\n    const timeDiffLastToClosing = (openingEndTime.getTime() - lastAppointmentEnd.getTime()) / (1000 * 60);\n    return timeDiffLastToClosing >= 60;\n  }\n  isValidTime(time) {\n    const selectedTime = new Date(time);\n    const minutes = selectedTime.getMinutes();\n    return minutes === 0 || minutes === 30;\n  }\n  static #_ = this.ɵfac = function NastavnikdetaljiComponent_Factory(t) {\n    return new (t || NastavnikdetaljiComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.LoginservisService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NastavnikdetaljiComponent,\n    selectors: [[\"app-nastavnikdetalji\"]],\n    decls: 61,\n    vars: 18,\n    consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\", 2, \"width\", \"400px\"], [1, \"card-img-top\", 3, \"src\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [4, \"ngFor\", \"ngForOf\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"classForm\", \"ngForm\"], [\"for\", \"subject\"], [\"id\", \"subject\", \"name\", \"subject\", \"required\", \"\", 1, \"btn-outline-dark\", \"rounded-pill\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\", \"ngIfElse\"], [\"multipleSubjects\", \"\"], [\"for\", \"dateTime\"], [\"id\", \"dateTime\", \"name\", \"dateTime\", \"type\", \"datetime-local\", \"required\", \"\", 1, \"btn-outline-dark\", \"rounded-pill\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"name\", \"description\", \"required\", \"\", 1, \"btn-outline-dark\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"doubleClass\"], [\"id\", \"doubleClass\", \"name\", \"doubleClass\", \"type\", \"checkbox\", 1, \"btn-outline-dark\", \"rounded-pill\", 3, \"ngModel\", \"ngModelChange\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"style\", \"color: green\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"indented\"], [\"disabled\", \"\", 3, \"ngValue\", \"selected\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [2, \"color\", \"red\"], [2, \"color\", \"green\"]],\n    template: function NastavnikdetaljiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n        i0.ɵɵtext(4, \"Profil\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"img\", 4);\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"h4\", 6);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\", 7);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"p\", 7);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\", 7);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p\", 7);\n        i0.ɵɵtext(17, \"Predmeti: \");\n        i0.ɵɵtemplate(18, NastavnikdetaljiComponent_ng_container_18_Template, 3, 1, \"ng-container\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\", 7);\n        i0.ɵɵtext(20, \"Razredi: \");\n        i0.ɵɵtemplate(21, NastavnikdetaljiComponent_ng_container_21_Template, 3, 1, \"ng-container\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"p\", 7);\n        i0.ɵɵtext(23, \"Ocene: \");\n        i0.ɵɵtemplate(24, NastavnikdetaljiComponent_ng_container_24_Template, 3, 1, \"ng-container\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"p\", 7);\n        i0.ɵɵtext(26, \"Komentari: \");\n        i0.ɵɵtemplate(27, NastavnikdetaljiComponent_ng_container_27_Template, 3, 1, \"ng-container\", 8);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelement(28, \"br\");\n        i0.ɵɵelementStart(29, \"h2\");\n        i0.ɵɵtext(30, \"Zakazivanje casa:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"form\", 9, 10);\n        i0.ɵɵlistener(\"ngSubmit\", function NastavnikdetaljiComponent_Template_form_ngSubmit_31_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(33, \"label\", 11);\n        i0.ɵɵtext(34, \"Predmet:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"select\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function NastavnikdetaljiComponent_Template_select_ngModelChange_35_listener($event) {\n          return ctx.cas.predmet = $event;\n        });\n        i0.ɵɵtemplate(36, NastavnikdetaljiComponent_ng_container_36_Template, 3, 3, \"ng-container\", 13);\n        i0.ɵɵtemplate(37, NastavnikdetaljiComponent_ng_template_37_Template, 1, 1, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"br\");\n        i0.ɵɵelementStart(40, \"label\", 15);\n        i0.ɵɵtext(41, \"Datum i vreme:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"input\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function NastavnikdetaljiComponent_Template_input_ngModelChange_42_listener($event) {\n          return ctx.cas.datumvreme = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"br\");\n        i0.ɵɵelementStart(44, \"label\", 17);\n        i0.ɵɵtext(45, \"Opis:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"textarea\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function NastavnikdetaljiComponent_Template_textarea_ngModelChange_46_listener($event) {\n          return ctx.cas.opis = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"br\");\n        i0.ɵɵelementStart(48, \"label\", 19);\n        i0.ɵɵtext(49, \"Dupli cas:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"input\", 20);\n        i0.ɵɵlistener(\"ngModelChange\", function NastavnikdetaljiComponent_Template_input_ngModelChange_50_listener($event) {\n          return ctx.dupli = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(51, \"br\");\n        i0.ɵɵtemplate(52, NastavnikdetaljiComponent_span_52_Template, 2, 1, \"span\", 21);\n        i0.ɵɵtemplate(53, NastavnikdetaljiComponent_span_53_Template, 2, 1, \"span\", 22);\n        i0.ɵɵelement(54, \"br\");\n        i0.ɵɵelementStart(55, \"button\", 23);\n        i0.ɵɵtext(56, \"Submit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(57, \"br\");\n        i0.ɵɵelementStart(58, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function NastavnikdetaljiComponent_Template_button_click_58_listener() {\n          return ctx.back();\n        });\n        i0.ɵɵtext(59, \"Nazad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(60, \"br\");\n      }\n      if (rf & 2) {\n        const _r6 = i0.ɵɵreference(38);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"src\", ctx.imgRel, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", ctx.nastavnik.name, \" \", ctx.nastavnik.surname, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Adresa:\", ctx.nastavnik.adress, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Email:\", ctx.nastavnik.email, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Telefon:\", ctx.nastavnik.telephone, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.nastavnik.predmeti);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.nastavnik.razredi);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ocene);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.komentari);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.cas.predmet);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSpecialized)(\"ngIfElse\", _r6);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.cas.datumvreme);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.cas.opis);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.dupli);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.message !== \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.succes !== \"\");\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".indented[_ngcontent-%COMP%] {\\n  padding-left: 20px; \\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmFzdGF2bmlrZGV0YWxqaS9uYXN0YXZuaWtkZXRhbGppLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0IsRUFBRSw4Q0FBOEM7QUFDcEUiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5kZW50ZWQge1xyXG4gIHBhZGRpbmctbGVmdDogMjBweDsgLyogQWRqdXN0IHRoZSB2YWx1ZSBiYXNlZCBvbiB5b3VyIHByZWZlcmVuY2UgKi9cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Nastavnik","Cas","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate","predmet_r10","razred_r11","ocena_r12","kom_r13","ɵɵproperty","ctx_r5","nastavnik","predmeti","predmet_r15","ɵɵtemplate","NastavnikdetaljiComponent_ng_template_37_option_0_Template","ctx_r7","ctx_r8","message","ctx_r9","succes","NastavnikdetaljiComponent","constructor","route","servis","ruter","username","cas","casovi","ocene","komentari","isSpecialized","dupli","imgRel","backend","ngOnInit","snapshot","paramMap","get","ucenik","localStorage","getItem","getnastavnik","subscribe","nst","length","profilePic","getCasoviNastavnika","data","b","ocena","push","komentar","submitForm","novi","Date","datumvreme","begin","console","log","predmet","isWeekend","setMinutes","getMinutes","getHours","checkWeek","checkDay","isValidTime","datumvremekraj","setHours","checkForOverlap","createcas","beginTime","getTime","noviTime","casDatumvreme","casDatumvremekraj","opis","date","day","getDay","back","navigate","filteredCasovi","filter","casDate","getFullYear","getMonth","getDate","hasOpening","start","end","setDate","openingStartTime","openingEndTime","sortedCasovi","sort","a","timeA","timeB","i","currentEnd","nextStart","timeDiffMinutes","lastAppointmentEnd","timeDiffLastToClosing","time","selectedTime","minutes","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","LoginservisService","Router","_2","selectors","decls","vars","consts","template","NastavnikdetaljiComponent_Template","rf","ctx","ɵɵelement","NastavnikdetaljiComponent_ng_container_18_Template","NastavnikdetaljiComponent_ng_container_21_Template","NastavnikdetaljiComponent_ng_container_24_Template","NastavnikdetaljiComponent_ng_container_27_Template","ɵɵlistener","NastavnikdetaljiComponent_Template_form_ngSubmit_31_listener","NastavnikdetaljiComponent_Template_select_ngModelChange_35_listener","$event","NastavnikdetaljiComponent_ng_container_36_Template","NastavnikdetaljiComponent_ng_template_37_Template","ɵɵtemplateRefExtractor","NastavnikdetaljiComponent_Template_input_ngModelChange_42_listener","NastavnikdetaljiComponent_Template_textarea_ngModelChange_46_listener","NastavnikdetaljiComponent_Template_input_ngModelChange_50_listener","NastavnikdetaljiComponent_span_52_Template","NastavnikdetaljiComponent_span_53_Template","NastavnikdetaljiComponent_Template_button_click_58_listener","ɵɵsanitizeUrl","ɵɵtextInterpolate2","name","surname","ɵɵtextInterpolate1","adress","email","telephone","razredi","_r6"],"sources":["C:\\Users\\Teodor\\Desktop\\PIAPROJEKAT\\frontend\\src\\app\\nastavnikdetalji\\nastavnikdetalji.component.ts","C:\\Users\\Teodor\\Desktop\\PIAPROJEKAT\\frontend\\src\\app\\nastavnikdetalji\\nastavnikdetalji.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { LoginservisService } from '../servisi/loginservis.service';\nimport { Nastavnik } from '../models/nastavnik';\nimport { Cas } from '../models/cas';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nastavnikdetalji',\n  templateUrl: './nastavnikdetalji.component.html',\n  styleUrls: ['./nastavnikdetalji.component.css']\n})\nexport class NastavnikdetaljiComponent {\n  constructor(private route: ActivatedRoute, private servis : LoginservisService, private ruter : Router) {}\n  username : string = \"\"\n  nastavnik : Nastavnik = new Nastavnik()\n  cas : Cas = new Cas()\n  casovi : Cas[] = []\n  ocene : number[] = []\n  komentari : string[] = []\n  isSpecialized : number = 0\n  dupli : boolean = false\n  message : string = \"\"\n  succes : string = \"\"\n  imgRel : string = \"\"\n  backend: string = \"http://localhost:4000\"\n\n  ngOnInit(){\n\n    this.message=\"\"\n    this.isSpecialized  = 0\n    this.username = this.route.snapshot.paramMap.get('username')!;\n    this.cas.nastavnik = this.username\n    this.cas.ucenik = localStorage.getItem(\"logged\")!\n    this.servis.getnastavnik(this.username).subscribe(nst=>{\n      this.nastavnik = nst\n      if(this.nastavnik.predmeti.length == 1){\n        this.isSpecialized  = 1\n      }\n      this.imgRel = this.backend +  nst.profilePic\n    })\n    this.servis.getCasoviNastavnika(this.username,1).subscribe(data=>{\n      if(data){\n        this.casovi = data\n        for(let b of data){\n          if(b.ocena !== 0)this.ocene.push(b.ocena)\n          if(b.komentar !== \"\")this.komentari.push(b.komentar)\n\n        }\n      }\n\n    })\n\n\n\n  }\n\n\n\n\n  submitForm() {\n    let novi = new Date(this.cas.datumvreme);\n    let begin = new Date(this.cas.datumvreme);\n    this.succes = \"\"\n    console.log(\"Vreme pocetka:\" + begin)\n    if(this.cas.predmet === \"\" && this.nastavnik.predmeti.length !== 1){\n      this.message = \"Izaberite predmet\"\n      return;\n    }\n    if(this.nastavnik.predmeti.length === 1){\n      this.cas.predmet = this.nastavnik.predmeti[0]\n    }\n\n    if(this.isWeekend(begin)){\n      this.message = \"Dont't work on weekends\"\n      return;\n    }\n    if(this.dupli){\n      novi.setMinutes(novi.getMinutes() + 120);\n    }else{\n      novi.setMinutes(novi.getMinutes() + 60);\n    }\n    console.log(\"Vreme kraja:\" + novi)\n    if(begin.getHours() < 10){\n      this.message = \"Start time is before 10 AM\"\n      return;\n    }\n\n    if(novi.getHours() > 18 || (novi.getHours() == 18 && novi.getMinutes() !== 0)){\n      this.message = \"End time is after 6 PM\"\n      return;\n    }\n    if(!this.checkWeek(begin,novi)){\n      this.message = \"Nema ove nedelje otvorenih termina\"\n      return;\n    }\n    if(!this.checkDay(begin,novi)){\n      this.message = \"Nema danas otvorenih termina\"\n      return;\n    }\n\n    if(!this.isValidTime(novi)){\n      this.message = \"Cas mora biti ili na poal sata ili na okrugli sat\"\n      return;\n    }\n\n\n\n    //novi.setHours(novi.getHours() + 1);\n    //begin.setHours(begin.getHours() + 1);\n    this.message=\"\"\n    //this.cas.datumvreme = begin\n    ///this.cas.datumvremekraj = novi;\n    this.cas.datumvreme = new Date(begin)\n    this.cas.datumvremekraj = new Date(novi);\n    this.cas.datumvreme.setHours(this.cas.datumvreme.getHours() + 1)\n    this.cas.datumvremekraj.setHours(this.cas.datumvremekraj.getHours() + 1)\n    if(this.checkForOverlap(this.cas.datumvreme,this.cas.datumvremekraj)){\n      this.message = \"Vec postoji cas u tom terminu\"\n      return;\n    }\n    this.message=\"\"\n    console.log(\"VREME POCETKA \" +  this.cas.datumvreme.getHours() )\n    this.servis.createcas(this.cas).subscribe(data=>{\n      if(data.message === \"ok\"){\n        //alert(\"Zahtev za cas je poslat\")\n        this.succes = \"Zahtev za cas je poslat\"\n      }\n    })\n    this.servis.getCasoviNastavnika(this.username,1).subscribe(data=>{\n      if(data){\n        this.casovi = data\n      }\n\n    })\n\n  }\n\n  checkForOverlap(begin: Date, novi: Date): boolean {\n\n    const beginTime = begin.getTime();\n    const noviTime = novi.getTime();\n\n    for (let cas of this.casovi) {\n      const casDatumvreme = new Date(cas.datumvreme).getTime();\n      const casDatumvremekraj = new Date(cas.datumvremekraj).getTime();\n\n\n      if (\n        (beginTime >= casDatumvreme && beginTime < casDatumvremekraj) ||\n        (noviTime > casDatumvreme && noviTime <= casDatumvremekraj) ||\n        (beginTime <= casDatumvreme && noviTime >= casDatumvremekraj)\n      ) {\n        console.log(cas.opis)\n        //MORAS SAT DA DODAS JEDAN\n        this.message = \"Postoji cas u terminu od  \" + cas.datumvreme  + \"do \" + cas.datumvremekraj\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  isWeekend(date: Date): boolean {\n    const day = date.getDay();\n    return day === 0 || day === 6;\n  }\n\n  back(){\n    this.ruter.navigate(['ucenik'])\n  }\n\n  checkDay(begin: Date, novi: Date) : boolean{\n    const beginTime = begin.getTime();\n    const noviTime = novi.getTime();\n    const filteredCasovi : Cas[] = this.casovi.filter(cas => {\n      let casDate  = new Date(cas.datumvreme);\n      return casDate.getFullYear() === begin.getFullYear() &&\n             casDate.getMonth() === begin.getMonth() &&\n             casDate.getDate() === begin.getDate();\n    });\n\n    return this.hasOpening(filteredCasovi,begin,novi)\n\n\n\n\n  }\n\n  checkWeek(begin: Date, novi: Date) : boolean{\n    let start = new Date(begin)\n    let end = new Date(novi)\n    let day = start.getDay()\n    for(day;day <=5;day++){\n      if(this.checkDay(start,end)){\n        return true\n      }\n      start.setDate(start.getDate() + 1);\n      end.setDate(end.getDate() + 1);\n    }\n    return false\n\n  }\n\n\n\n  hasOpening(filteredCasovi: Cas[],begin: Date, novi: Date): boolean {\n    const openingStartTime = new Date(begin);\n    openingStartTime.setHours(10, 0, 0);\n    const openingEndTime = new Date(novi);\n    openingEndTime.setHours(18, 0, 0);\n\n    const sortedCasovi = filteredCasovi.sort((a, b) => {\n      const timeA = new Date(a.datumvreme).getTime();\n      const timeB = new Date(b.datumvreme).getTime();\n      return timeA - timeB;\n    });\n\n\n    for (let i = 0; i < sortedCasovi.length - 1; i++) {\n      const currentEnd = new Date(sortedCasovi[i].datumvremekraj);\n      const nextStart = new Date(sortedCasovi[i + 1].datumvreme);\n      currentEnd.setHours(currentEnd.getHours() - 1)\n      nextStart.setHours(nextStart.getHours() - 1)\n      const timeDiffMinutes = (nextStart.getTime() - currentEnd.getTime()) / (1000 * 60);\n\n      if (timeDiffMinutes >= 60) {\n        return true;\n      }\n    }\n    if(sortedCasovi.length === 0){\n      return true\n    }\n    const lastAppointmentEnd = new Date(sortedCasovi[sortedCasovi.length - 1].datumvremekraj);\n    lastAppointmentEnd.setHours(lastAppointmentEnd.getHours() - 1)\n    const timeDiffLastToClosing = (openingEndTime.getTime() - lastAppointmentEnd.getTime()) / (1000 * 60);\n    return timeDiffLastToClosing >= 60;\n  }\n\n\n  isValidTime(time: Date): boolean {\n    const selectedTime = new Date(time);\n    const minutes = selectedTime.getMinutes();\n    return minutes === 0 || minutes === 30;\n  }\n}\n\n\n\n\n","\n\n<div class=\"container\">\n  <div class=\"row justify-content-center\">\n      <div class=\"col-md-6\">\n        <h3>Profil</h3>\n          <div class=\"card\" style = \"width:400px\">\n              <img class=\"card-img-top\" [src]=\"imgRel\" >\n              <div class=\"card-body\">\n                  <h4 class=\"card-title\">{{ nastavnik.name }} {{ nastavnik.surname }}</h4>\n                  <p class=\"card-text\">Adresa:{{ nastavnik.adress }}</p>\n                  <p class=\"card-text\">Email:{{ nastavnik.email }}</p>\n                  <p class=\"card-text\">Telefon:{{ nastavnik.telephone }}</p>\n                  <p class=\"card-text\">Predmeti:\n                      <ng-container *ngFor=\"let predmet of nastavnik.predmeti\">\n                          <div class=\"indented\">{{ predmet }}</div>\n                      </ng-container>\n                  </p>\n                  <p class=\"card-text\">Razredi:\n                      <ng-container *ngFor=\"let razred of nastavnik.razredi\">\n                          <div class=\"indented\">{{ razred }}</div>\n                      </ng-container>\n                  </p>\n                  <p class=\"card-text\">Ocene:\n                    <ng-container *ngFor=\"let ocena of ocene\">\n                        <div class=\"indented\">{{ ocena }}</div>\n                    </ng-container>\n                </p>\n                <p class=\"card-text\">Komentari:\n                  <ng-container *ngFor=\"let kom of komentari\">\n                      <div class=\"indented\">{{ kom }}</div>\n                  </ng-container>\n              </p>\n\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n<br/>\n\n<h2>Zakazivanje casa:</h2>\n<form (ngSubmit)=\"submitForm()\" #classForm=\"ngForm\" novalidate>\n  <label for=\"subject\">Predmet:</label>\n  <select class = \"btn-outline-dark rounded-pill\" id=\"subject\" name=\"subject\" [(ngModel)]=\"cas.predmet\" required>\n    <ng-container *ngIf=\"isSpecialized; else multipleSubjects\">\n      <option [ngValue]=\"nastavnik.predmeti[0]\" [selected]=\"true\" disabled>{{ nastavnik.predmeti[0] }}</option>\n    </ng-container>\n\n\n    <ng-template #multipleSubjects>\n      <option *ngFor=\"let predmet of nastavnik.predmeti\" [value]=\"predmet\">{{ predmet }}</option>\n    </ng-template>\n  </select>\n  <br/>\n\n\n  <label for=\"dateTime\">Datum i vreme:</label>\n  <input class = \"btn-outline-dark rounded-pill\" id=\"dateTime\" name=\"dateTime\" type=\"datetime-local\" [(ngModel)]=\"cas.datumvreme\" required>\n  <br/>\n\n  <label for=\"description\">Opis:</label>\n  <textarea class = \"btn-outline-dark \" id=\"description\" name=\"description\" [(ngModel)]=\"cas.opis\" required></textarea>\n  <br/>\n\n  <label for=\"doubleClass\">Dupli cas:</label>\n  <input class = \"btn-outline-dark rounded-pill\" id=\"doubleClass\" name=\"doubleClass\" type=\"checkbox\" [(ngModel)]=\"dupli\">\n  <br/>\n  <span style = \"color: red\" *ngIf=\"message !== ''\">{{message}}</span>\n  <span style = \"color: green\" *ngIf=\"succes !== ''\">{{succes}}</span>\n  <br>\n  <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n</form>\n\n<br>\n<button class=\"btn btn-primary\"(click) = \"back()\">Nazad</button>\n<br>\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}